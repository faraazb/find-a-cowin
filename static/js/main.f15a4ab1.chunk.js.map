{"version":3,"sources":["find-a-cowin.svg","features/settings/settingsSlice.js","features/finder/filters/filters.js","features/finder/sorting/sorting.js","features/cowin/cowinSlice.js","features/finder/Session.jsx","features/starred-centers/starredCentersSlice.js","features/finder/Center.jsx","features/finder/Selectors.jsx","features/finder/filters/FeeTypeFilters.jsx","utils/DateUtilities.js","features/settings/Settings.jsx","features/finder/filters/FilterPopover.jsx","features/finder/Finder.jsx","features/home/Home.jsx","features/FourOFour.jsx","features/starred-centers/StarredCenters.jsx","App.jsx","app/store.js","reportWebVitals.js","index.js"],"names":["_g","_excluded","_extends","Object","assign","target","i","arguments","length","source","key","prototype","hasOwnProperty","call","apply","this","_objectWithoutProperties","excluded","sourceKeys","keys","indexOf","_objectWithoutPropertiesLoose","getOwnPropertySymbols","sourceSymbolKeys","propertyIsEnumerable","SvgFindACowin","_ref","svgRef","title","titleId","props","width","height","viewBox","xmlns","ref","id","strokeLinecap","fillRule","d","vectorEffect","ForwardRef","settingsMap","defaultSettings","initialState","calendarByDistrictView","localStorage","getItem","calendarByDistrictAutoRefresh","calendarByDistrictAutoRefreshInterval","parseInt","settingsSlice","createSlice","name","reducers","resetSettings","state","action","setItem","setCalendarByDistrictView","viewName","payload","setCalendarByDistrictAutoRefreshInterval","interval","removeItem","toString","actions","isFree","centers","filter","center","fee_type","isPaid","byVaccine","vaccines","filteredCenters","some","session","includes","vaccine","sessions","newCenters","forEach","newCenter","clone","push","byKeyword","keywords","center_id","address","block_name","join","toLowerCase","el","combineMultipleAgeConditions","ages","filterFields","joins","val1","byAgeCategory","categories","values","fifteenAbove","eighteenAbove","eighteenFortyFour","fortyFiveAbove","min","max","undefined","byCenterTotalDoses","sortOrder","orderBy","sumBy","available_capacity","states","districts","selected","stateEnt","stateName","stateId","districtEnt","districtName","districtId","calendarByDistrict","calendarByCenter","vaccinationReports","publicReports","status","JSON","parse","getCalendarByStarredCenters","error","filters","feeType","covaxin","checked","covishield","sputnik","minAge","maxAge","sort","doses","totalDoses","fetchCalendarByDistrict","createAsyncThunk","a","date","axios","get","response","data","fetchCalendarByCenter","centerId","fetchStates","fetchDistricts","fetchVaccinationReports","fetchPublicReports","cowinSlice","resetDistrictStore","resetCalendarByDistrictStore","setSelectedState","setCalendarByCenterStatus","fetchStatus","setSelectedDistrict","setFeeFilter","typeSelected","setKeywordFilter","setVaccineFilter","value","setAgeFilter","age","extraReducers","pending","fulfilled","rejected","message","meta","arg","selectCalendarByDistrict","cowin","selectCalendarByCenter","selectKeywordFilter","selectFeeFilters","selectVaccineFilter","selectAgeFilter","selectAllStates","selectAllDistricts","selectSelectedState","selectSelectedDistrict","selectFilteredData","createSelector","feeFilters","transformations","filterIsFree","filterIsPaid","selectedVaccines","pickBy","nextVaccines","partialRight","filterByVaccine","filterByAgeCategory","filterByKeyword","sortByCenterTotalDoses","flow","SessionTags","map","className","intent","Intent","PRIMARY","minimal","icon","available_capacity_dose1","available_capacity_dose2","SessionTable","min_age_limit","max_age_limit","starredCentersSlice","resetStarredCenters","_action","stringify","setStarredCenters","selectStarredCenters","starredCenters","WARNING","SUCCESS","CenterCard","content","loading","showStarButton","viewType","useSelector","settings","dispatch","useDispatch","starred","vaccine_fees","vaccine_fee","fee","text","onClick","event","nextStarredCenters","val","unstarCenter","small","starredNavLink","href","process","AppToaster","show","starCenter","filterList","query","_index","exactMatch","normalizedTitle","normalizedQuery","StateSelector","React","memo","setState","selectedState","fill","items","popoverProps","popoverClassName","inputValueRenderer","state_name","itemRenderer","handleClick","_modifiers","_query","state_id","onItemSelect","_event","itemPredicate","index","noResults","disabled","rightIcon","DistrictSelector","setDistrict","selectedDistrict","district","district_name","district_id","FeeTypeFilters","feeFilter","alignmentVertical","feeTypeChange","feeTypeVal","vertical","label","onChange","alignIndicator","Alignment","RIGHT","formatDate","separator","formatId","month","getMonth","day","getDate","year","getFullYear","yearShort","substr","Settings","isOpen","setIsOpen","view","autoRefresh","autoRefreshInt","nickDisplayMap","handleClose","viewOptions","refreshOptions","canOutsideClickClose","onClose","usePortal","option","FilterPopover","useState","vaccineFilter","ageCategoryChecked","handleVaccineChange","handleAgeCategoryChange","DANGER","Classes","POPOVER2_DISMISS","POPOVER2_CONTENT_SIZING","interactionKind","onInteraction","placement","Finder","history","useHistory","calendarFetchStatus","unfilteredCenters","searchInputValues","isSettingsOpen","setSettingsOpen","autoRefreshInterval","statesFetchStatus","intervalRef","useRef","refreshData","Date","useEffect","clearInterval","current","intervalId","setInterval","size","description","clearButton","leftIcon","placeholder","rightElement","Home","position","MINIMAL","FourOFour","to","StarredCenters","initializeStarred","outlined","_id","getCenterContent","Toaster","create","Position","TOP","FocusStyleManager","onlyShowFocusOnTabs","App","initializeSettings","isDarkTheme","window","matchMedia","matches","setIsDarkTheme","mqListener","e","darkThemeMq","addEventListener","removeEventListener","useThemeDetector","themeButton","setThemeButton","document","getElementById","classList","add","basename","align","LEFT","div","contains","remove","path","exact","store","configureStore","reducer","cowinReducer","settingsReducer","starredCentersReducer","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.f15a4ab1.chunk.js","sourcesContent":["var _g;\n\nvar _excluded = [\"title\", \"titleId\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport * as React from \"react\";\n\nfunction SvgFindACowin(_ref, svgRef) {\n  var title = _ref.title,\n      titleId = _ref.titleId,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    width: 657.364,\n    height: 79.731,\n    viewBox: \"0 0 657.364 79.731\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _g || (_g = /*#__PURE__*/React.createElement(\"g\", {\n    id: \"svgGroup\",\n    strokeLinecap: \"round\",\n    fillRule: \"evenodd\"\n  }, /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M 503.727 78.455 L 517.818 47.637 L 519.091 78.455 L 527.545 78.455 L 553.273 5.728 L 544 5.728 L 526.636 55.455 L 525.909 27.637 L 517.727 27.637 L 505.182 55.455 L 509.091 5.728 L 500 5.728 L 494.818 78.455 L 503.727 78.455 Z M 636.909 59.092 L 623.545 5.728 L 613.909 5.728 L 598.455 78.455 L 607.545 78.455 L 618.909 24.91 L 632.364 78.455 L 641.909 78.455 L 657.364 5.728 L 648.273 5.728 L 636.909 59.092 Z M 109.909 25.91 L 113.545 32.637 A 97.006 97.006 0 0 1 114.476 31.777 C 116.473 29.957 117.305 29.419 118.137 29.369 A 2.234 2.234 0 0 1 118.273 29.364 C 119.083 29.364 119.605 29.726 119.902 30.384 A 2.668 2.668 0 0 1 120 30.637 A 1.313 1.313 0 0 1 120.044 30.866 C 120.099 31.404 119.818 31.863 119.818 32.183 L 109.818 78.455 L 118.818 78.455 L 124.364 51.546 A 23.516 23.516 0 0 1 125.109 48.819 C 128.034 40.123 136.019 31.427 141.718 29.681 A 6.594 6.594 0 0 1 143.636 29.364 A 7.609 7.609 0 0 1 146.395 29.823 C 149.636 31.083 150.59 34.946 148.407 41.541 A 36.314 36.314 0 0 1 148.091 42.455 A 162.801 162.801 0 0 0 144.968 52.052 C 142.206 61.568 141.134 68.877 141.273 72.819 A 7.343 7.343 0 0 0 142.444 76.635 C 143.747 78.581 146.089 79.728 149.273 79.728 A 15.913 15.913 0 0 0 151.597 79.552 C 154.978 79.05 158.359 77.508 159.887 75.297 A 5.344 5.344 0 0 0 160.182 74.819 L 156.455 67.455 A 11.238 11.238 0 0 1 155.34 69.152 C 154.235 70.531 152.953 71.364 151.818 71.364 A 2.559 2.559 0 0 1 151.014 71.246 C 150.489 71.072 150.125 70.705 150.021 70.147 A 1.749 1.749 0 0 1 150 70.001 C 149.659 66.457 151.26 59.952 153.729 51.938 A 438.876 438.876 0 0 1 156.455 43.455 C 161.129 29.432 157.181 21.186 145.049 21.004 A 27.543 27.543 0 0 0 144.636 21.001 A 13.647 13.647 0 0 0 140.221 21.789 C 137.46 22.736 134.554 24.531 131.713 27.146 A 37.785 37.785 0 0 0 129.091 29.819 A 6.785 6.785 0 0 0 129.289 28.488 C 129.418 25.722 127.758 23.308 125.194 22.012 A 9.693 9.693 0 0 0 120.818 21.001 A 15.913 15.913 0 0 0 118.493 21.177 C 115.113 21.679 111.732 23.22 110.204 25.432 A 5.344 5.344 0 0 0 109.909 25.91 Z M 428.818 62.183 L 420.636 58.546 C 416.16 67.338 413.09 70.579 406.915 71.233 A 25.977 25.977 0 0 1 404.182 71.364 C 393.091 71.364 391.182 64.728 395.909 42.728 A 141.063 141.063 0 0 1 398.242 33.212 C 400.191 26.427 402.366 21.638 405.062 18.414 A 15.61 15.61 0 0 1 418.091 12.819 A 20.083 20.083 0 0 1 421.542 13.064 C 426.046 13.861 427.329 16.83 428 25.183 L 436.909 22.91 A 40.725 40.725 0 0 0 435.966 16.211 C 433.94 7.756 428.852 4.455 418.364 4.455 A 30.37 30.37 0 0 0 406.469 6.526 C 397.055 10.488 391.77 20.468 387.528 39.286 A 200.05 200.05 0 0 0 387.091 41.274 A 160.483 160.483 0 0 0 385.897 47.475 C 381.919 70.76 386.806 79.728 403.909 79.728 A 34.911 34.911 0 0 0 411.206 79.058 C 418.281 77.544 422.872 73.277 427.675 64.378 A 86.652 86.652 0 0 0 428.818 62.183 Z M 600.364 5.728 L 561.818 5.728 L 560.091 14.092 L 574.727 14.092 L 562.909 70.092 L 548.182 70.092 L 546.364 78.455 L 584.909 78.455 L 586.727 70.092 L 572 70.092 L 583.818 14.092 L 598.636 14.092 L 600.364 5.728 Z M 58.545 5.728 L 15.455 5.728 L 0 78.455 L 9.091 78.455 L 15.455 48.364 L 37.364 48.364 L 39.091 40.001 L 17.364 40.001 L 22.727 14.092 L 56.818 14.092 L 58.545 5.728 Z M 205.545 67.637 L 218.818 5.728 L 209.818 5.728 L 205.455 24.819 A 13.153 13.153 0 0 0 201.229 22.121 C 199.857 21.57 198.324 21.199 196.652 21.061 A 17.879 17.879 0 0 0 195.182 21.001 A 27.142 27.142 0 0 0 172.307 34.397 C 169.542 38.664 167.477 43.789 166.294 49.534 A 52.491 52.491 0 0 0 166.182 50.092 A 128.953 128.953 0 0 0 165.298 55.089 C 162.559 72.757 166.14 79.728 179.909 79.728 A 51.639 51.639 0 0 0 184.518 79.54 C 191.153 78.943 194.271 76.968 196.455 74.183 C 196.615 77.712 198.828 79.331 202.719 79.663 A 19.394 19.394 0 0 0 204.364 79.728 A 15.913 15.913 0 0 0 206.688 79.552 C 210.069 79.05 213.45 77.508 214.978 75.297 A 5.344 5.344 0 0 0 215.273 74.819 L 211.545 67.455 A 11.238 11.238 0 0 1 210.431 69.152 C 209.326 70.531 208.044 71.364 206.909 71.364 A 3.167 3.167 0 0 1 206.296 71.311 C 204.881 71.031 205.141 69.657 205.545 67.637 Z M 321.727 74.819 L 318 67.455 A 11.238 11.238 0 0 1 316.886 69.152 C 315.781 70.531 314.499 71.364 313.364 71.364 A 5.184 5.184 0 0 1 312.705 71.328 C 311.135 71.125 311.332 70.057 311.818 67.546 C 318.385 37.914 319.393 32.888 319.393 31.054 A 4.22 4.22 0 0 0 319.364 30.546 A 9.213 9.213 0 0 0 318.276 25.907 C 316.438 22.683 312.234 21.112 305.385 21.007 A 48.766 48.766 0 0 0 304.636 21.001 C 289.677 21.001 273.091 41.796 273.091 62.197 A 37.569 37.569 0 0 0 273.091 62.364 A 22.987 22.987 0 0 0 273.083 62.969 C 273.083 72.999 279.747 79.728 289.818 79.728 C 294.182 79.728 298.818 77.637 302.455 73.91 A 1.052 1.052 0 0 1 302.433 73.888 C 302.3 73.747 302.54 73.886 302.713 73.573 A 0.726 0.726 0 0 0 302.727 73.546 C 302.884 76.44 305.26 78.93 308.931 79.569 A 10.995 10.995 0 0 0 310.818 79.728 A 15.913 15.913 0 0 0 313.143 79.552 C 316.524 79.05 319.905 77.508 321.432 75.297 A 5.344 5.344 0 0 0 321.727 74.819 Z M 101.364 68.274 L 94.636 63.546 A 103.729 103.729 0 0 1 93.388 65.271 C 90.036 69.79 88.202 71.183 84.905 71.347 A 14.525 14.525 0 0 1 84.182 71.364 A 17.328 17.328 0 0 1 80.62 71.048 C 75.733 70.01 74.191 66.227 76.505 56.844 A 67.692 67.692 0 0 1 77.091 54.637 L 82.636 34.819 A 13.248 13.248 0 0 0 83.004 33.145 C 83.812 27.755 80.52 24.174 74.436 22.703 A 24.534 24.534 0 0 0 72.182 22.274 L 70 30.637 A 9.625 9.625 0 0 1 71.499 30.98 C 73.743 31.707 74.435 33.192 73.816 35.672 A 10.206 10.206 0 0 1 73.727 36.001 L 68.455 54.637 A 73.072 73.072 0 0 0 67.42 58.735 C 64.23 73.241 68.579 78.94 80.524 79.651 A 46.357 46.357 0 0 0 83.273 79.728 A 20.497 20.497 0 0 0 88.484 79.128 C 93.147 77.912 96.827 74.707 101.364 68.274 Z M 456.727 79.728 C 469.727 79.728 480.182 67.183 483.909 50.728 C 488.818 29.274 484.909 21.001 468.364 21.001 C 455.364 21.001 444.364 33.546 441.182 50.001 C 436.909 71.455 440.182 79.728 456.727 79.728 Z M 202.455 41.455 L 197.273 64.91 A 9.26 9.26 0 0 1 194.454 67.81 C 191.96 69.534 188.312 70.796 184.03 71.214 A 32.137 32.137 0 0 1 180.909 71.364 A 11.344 11.344 0 0 1 177.338 70.87 C 172.857 69.379 171.829 64.367 173.819 53.895 A 104.12 104.12 0 0 1 174.455 50.819 C 176.187 42.885 179.773 36.599 184.412 32.933 A 15.622 15.622 0 0 1 194.182 29.364 C 199.874 29.364 203.204 33.92 202.547 40.674 A 19.026 19.026 0 0 1 202.455 41.455 Z M 453.66 70.969 A 18.13 18.13 0 0 0 457.727 71.364 A 9.893 9.893 0 0 0 458.782 71.308 C 463.515 70.8 468.248 66.935 471.609 61.188 A 35.139 35.139 0 0 0 475.727 50.001 A 123.314 123.314 0 0 0 476.251 47.056 C 478.102 35.809 476.95 31.013 471.282 29.734 A 17.957 17.957 0 0 0 467.364 29.364 A 9.707 9.707 0 0 0 466.952 29.373 C 462.023 29.583 457.238 33.528 453.732 39.527 A 40.622 40.622 0 0 0 449.364 50.728 C 446.386 64.015 447.512 69.541 453.66 70.969 Z M 285.227 69.626 A 9.024 9.024 0 0 0 290.727 71.364 A 7.059 7.059 0 0 0 291.458 71.326 C 294.824 70.976 298.374 68.256 301.335 64.281 A 35.911 35.911 0 0 0 306.273 54.91 C 308.636 42.91 310.727 33.728 310.818 31.819 C 310.636 29.91 309.091 29.364 303.727 29.364 A 7.343 7.343 0 0 0 303.399 29.372 C 295.469 29.727 284.774 42.788 282.086 55.848 A 29.699 29.699 0 0 0 281.455 61.455 C 281.564 65.071 282.961 67.927 285.227 69.626 Z M 263.909 46.274 L 265.636 37.91 L 228.364 37.91 L 226.636 46.274 L 263.909 46.274 Z M 373 46.274 L 374.727 37.91 L 337.455 37.91 L 335.727 46.274 L 373 46.274 Z M 83.455 12.91 C 88.182 12.91 90 11.546 90.909 7.092 A 20.585 20.585 0 0 0 91.124 5.984 C 91.855 1.509 90.238 0.016 84.987 0.001 A 28.123 28.123 0 0 0 84.909 0.001 A 16.171 16.171 0 0 0 82.501 0.156 C 79.492 0.613 78.148 2.147 77.401 5.639 A 19.88 19.88 0 0 0 77.364 5.819 C 76.273 11.183 77.727 12.91 83.455 12.91 Z\",\n    vectorEffect: \"non-scaling-stroke\"\n  }))));\n}\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgFindACowin);\nexport default __webpack_public_path__ + \"static/media/find-a-cowin.1ba23df8.svg\";\nexport { ForwardRef as ReactComponent };","import {createSlice} from \"@reduxjs/toolkit\";\n\n\nconst settingsMap = {\n    calendarByDistrictView: \"SETTINGS_CALENDARBYDIST_VIEW\",\n    calendarByDistrictAutoRefresh: \"SETTINGS_CALENDARBYDIST_AR\",\n    calendarByDistrictAutoRefreshInterval: \"SETTINGS_CALENDARBYDIST_AR_INT\"\n}\n\nconst defaultSettings = {\n    calendarByDistrictView: \"table\",\n    calendarByDistrictAutoRefresh: false,\n    calendarByDistrictAutoRefreshInterval: null\n\n}\n\nconst initialState = {\n    calendarByDistrictView: localStorage.getItem(settingsMap.calendarByDistrictView) || defaultSettings.calendarByDistrictView,\n    calendarByDistrictAutoRefresh: localStorage.getItem(settingsMap.calendarByDistrictAutoRefresh) === \"true\"\n        || defaultSettings.calendarByDistrictAutoRefresh,\n    calendarByDistrictAutoRefreshInterval: parseInt(localStorage.getItem(settingsMap.calendarByDistrictAutoRefreshInterval))\n        || defaultSettings.calendarByDistrictAutoRefreshInterval\n}\n\n\nexport const settingsSlice = createSlice({\n    name: 'settings',\n    initialState,\n    reducers: {\n        resetSettings: (state, action) => {\n            localStorage.setItem('SETTINGS', 'true');\n            localStorage.setItem(settingsMap.calendarByDistrictView, defaultSettings.calendarByDistrictView);\n            localStorage.setItem(settingsMap.calendarByDistrictAutoRefresh,\n                defaultSettings.calendarByDistrictAutoRefresh);\n            localStorage.setItem(settingsMap.calendarByDistrictAutoRefreshInterval,\n                defaultSettings.calendarByDistrictAutoRefreshInterval)\n            state.calendarByDistrictView = defaultSettings.calendarByDistrictView;\n            state.calendarByDistrictAutoRefresh = defaultSettings.calendarByDistrictAutoRefresh;\n            state.calendarByDistrictAutoRefreshInterval = defaultSettings.calendarByDistrictAutoRefreshInterval;\n        },\n        setCalendarByDistrictView: (state, action) => {\n            const { viewName } = action.payload;\n            state.calendarByDistrictView = viewName;\n            localStorage.setItem(settingsMap.calendarByDistrictView, viewName);\n        },\n        setCalendarByDistrictAutoRefreshInterval: (state, action) => {\n            const { interval } = action.payload;\n            if (interval === null) {\n                state.calendarByDistrictAutoRefresh = false;\n                state.calendarByDistrictAutoRefreshInterval = null;\n                localStorage.setItem('SETTINGS_CALENDARBYDIST_AR', 'false')\n                localStorage.removeItem('SETTINGS_CALENDARBYDIST_AR_INT')\n            }\n            else {\n                state.calendarByDistrictAutoRefresh = true;\n                state.calendarByDistrictAutoRefreshInterval = interval;\n                localStorage.setItem('SETTINGS_CALENDARBYDIST_AR', 'true')\n                localStorage.setItem('SETTINGS_CALENDARBYDIST_AR_INT', interval.toString())\n            }\n        }\n    }\n});\n\nexport const {\n    resetSettings,\n    setCalendarByDistrictView,\n    setCalendarByDistrictAutoRefreshInterval\n} = settingsSlice.actions;\n\nexport const selectSettings = (state) => state.settings;\n\nexport default settingsSlice.reducer;\n","import { filter, some, clone } from \"lodash/fp\";\n\nexport function isFree(centers) {\n    return filter(center => center.fee_type === \"Free\", centers);\n}\n\nexport function isPaid(centers) {\n    return filter(center => center.fee_type === \"Paid\", centers);\n}\n\nexport function byVaccine(centers, vaccines) {\n    let filteredCenters = filter(center => {\n        return some(session => vaccines.includes(session.vaccine), center.sessions);\n    }, centers);\n    let newCenters = []\n    filteredCenters.forEach(center => {\n        let newCenter = clone(center)\n        newCenter.sessions = filter(session => vaccines.includes(session.vaccine), center.sessions);\n        newCenters.push(newCenter)\n    })\n    return newCenters;\n}\n\nexport function byKeyword(centers, keywords) {\n    return filter(center => {\n        const target = [\n            center.center_id.toString(),\n            center.name,\n            center.address,\n            center.block_name\n        ].join(' ').toLowerCase();\n        return some(el => target.indexOf(el.toLowerCase()) >= 0, keywords)\n    }, centers);\n}\n\n\nexport function byAge(centers, ages) {\n    const {minAge, maxAge} = ages\n    let filteredCenters = filter(center => {\n        return some(session => {\n            if (minAge && maxAge) {\n                return session.min_age_limit === minAge && session.max_age_limit === maxAge;\n            }\n            else if (minAge && !maxAge) {\n                return session.min_age_limit === minAge;\n            }\n        }, center.sessions);\n    }, centers);\n    let newCenters = []\n    filteredCenters.forEach(center => {\n        let newCenter = clone(center)\n        newCenter.sessions = filter(session => {\n            if (minAge && maxAge) {\n                return session.min_age_limit === minAge && session.max_age_limit === maxAge;\n            }\n            else if (minAge && !maxAge) {\n                return session.min_age_limit === minAge;\n            }\n        }, center.sessions);\n        newCenters.push(newCenter)\n    })\n    return newCenters;\n}\n\n/* \nA terribly specific function for helping the byAgeCategory filter function.\nWorks for now, since there are only 3 age categories, hence only 6+1 combinaions are possible.\nTakes an array of age values, array containing \"min_age\" and \"max_age\" and then uses\nthe join array to determine whether to AND (join: true) or to OR (join: false) the conditions.\n*/\nfunction combineMultipleAgeConditions(session, ages, filterFields, joins) {\n    let val1 = joins[0] ? \n            session[filterFields[0]] === ages[0] && session[filterFields[1]] === ages[1] : \n            (session[filterFields[0]] === ages[0] || session[filterFields[1]] === ages[1]);\n    if (ages.length === 2) {\n        return val1;\n    }\n    // Currently, three conditional checks are only required when 18+ and 45+ is checked\n    // to filter out the 18-44 slots. Hence, note that the statements are using the unequal sign.\n    if (ages.length === 3) {\n        return joins[1] ?\n            val1 && session[filterFields[2]] !== ages[2] :\n            val1 || session[filterFields[2]] !== ages[2]\n    }\n    return false;\n}\n\n/* \nFilters age by category, the if-else ladder determines what minimum and maximum values\nto use for filtering depending on the categories selected (values array). \nSince multiple, disconnected ranges like 18+ and 45+ can be checked by the user, a helper \nfunction which can take multiple min. or max. values and other parameters is used.\n*/\nexport function byAgeCategory(centers, categories) {\n    const {eighteenAbove: fifteenAbove, eighteenFortyFour, fortyFiveAbove} = categories;\n    let values, filterFields, joins;\n    let min = \"min_age_limit\";\n    let max = \"max_age_limit\";\n    if (fifteenAbove === eighteenFortyFour && fifteenAbove === fortyFiveAbove) {\n        return centers;\n    }\n    if (fifteenAbove && eighteenFortyFour) {\n        values = [15, 44];\n        filterFields = [min, max];\n        joins = [false];\n    }\n    else if (fifteenAbove && fortyFiveAbove) {\n        // filter centers with:\n        // (min = 18 OR min = 45) AND max != 44\n        // a false in joins means OR, a true means AND\n        // filter centers with: \n        // (filterFields[0] = values[0] {joins[0]} filterFields[1] = values[1]) AND filterFields[2] != values[2]\n        values = [15, 45, 44];\n        filterFields = [min, min, max];\n        joins = [false, true];\n    }\n    else if (eighteenFortyFour && fortyFiveAbove) {\n        values = [45, 44];\n        filterFields = [min, max];\n        joins = [false];\n    }\n    else if (fifteenAbove) {\n        values = [15, undefined];\n        filterFields = [min, max];\n        joins = [true];\n    }\n    else if (eighteenFortyFour) {\n        values = [18, 44];\n        filterFields = [min, max];\n        joins = [true];\n    }\n    else if (fortyFiveAbove) {\n        values = [45, undefined];\n        filterFields = [min, max];\n        joins = [true];\n    }\n    else {\n        return centers;\n    }\n\n    let filteredCenters = filter(center => {\n        return some(session => {\n            return combineMultipleAgeConditions(session, values, filterFields, joins);\n        }, center.sessions);\n    }, centers);\n    let newCenters = []\n    filteredCenters.forEach(center => {\n        let newCenter = clone(center)\n        newCenter.sessions = filter(session => {\n            return combineMultipleAgeConditions(session, values, filterFields, joins);\n        }, center.sessions);\n        newCenters.push(newCenter);\n    })\n    return newCenters;\n}","import { clone, orderBy, sumBy } from \"lodash/fp\"\n\nexport function byCenterTotalDoses(centers, sortOrder) {\n    return orderBy(center => sumBy(session => session.available_capacity, center.sessions), sortOrder, centers);\n}\n\nexport function bySessionDoses(centers, sortOrder) {\n    let nextCenters = [];\n    centers.forEach(center => {\n        let nextCenter = clone(center)\n        nextCenter.sessions = orderBy(\n            ['available_capacity_dose1', 'available_capacity_dose2'], \n            sortOrder, \n            center.sessions\n        )\n        nextCenters.push(nextCenter);\n    });\n    return nextCenters;\n}\n","import {createAsyncThunk, createSelector, createSlice} from \"@reduxjs/toolkit\";\nimport axios from \"axios\"\nimport { flow, partialRight, pickBy } from \"lodash/fp\";\nimport {\n\tbyAgeCategory as filterByAgeCategory, \n    byKeyword as filterByKeyword, \n    byVaccine as filterByVaccine, \n    isFree as filterIsFree, \n    isPaid as filterIsPaid \n} from \"../finder/filters/filters\";\nimport { \n\tbyCenterTotalDoses as sortByCenterTotalDoses \n} from \"../finder/sorting/sorting\";\n\nconst getCalendarByStarredCenters = () => {\n    let status = {}\n    const centers = JSON.parse(localStorage.getItem(\"starred\"));\n    if (centers) {\n        for (let center of centers) {\n            status[center] = 'idle'\n        }\n    }\n    return status;\n}\n\nconst initialState = {\n    states: [],\n    districts: [],\n    selected: {\n        stateEnt: {\n            stateName: \"Select a State\",\n            stateId: null\n        },\n        districtEnt: {\n            districtName: \"Select a District\",\n            districtId: null\n        },\n    },\n    calendarByDistrict: {\n        centers: []\n    },\n    calendarByCenter: {},\n    vaccinationReports: {},\n    publicReports: {},\n    status: {\n        states: 'idle',\n        districts: 'idle',\n        calendarByDistrict: 'idle',\n        calendarByCenter: getCalendarByStarredCenters(),\n        vaccinationReports: 'idle',\n        publicReports: 'idle'\n    },\n    error: {\n        states: null,\n        districts: null,\n        calendarByDistrict: null,\n        vaccinationReports: null,\n        publicReports: null\n    },\n    filters: {\n        keywords: [],\n        feeType: {\n            \"Free\": true,\n            \"Paid\": true\n        },\n        // vaccines: {\n        //     \"COVAXIN\": false,\n        //     \"COVISHIELD\": true,\n        //     \"SPUTNIK V\": false\n        // },\n        vaccines: {\n            covaxin: {\n                name: \"COVAXIN\",\n                checked: true\n            },\n            covishield: {\n                name: \"COVISHIELD\",\n                checked: true\n            },\n            sputnik: {\n                name: \"SPUTNIK V\",\n                checked: true\n            }\n        },\n        ages: {\n            minAge: null,\n            maxAge: null,\n\t\t\tfifteenAbove: true,\n\t\t\teighteenFortyFour: true,\n\t\t\tfortyFiveAbove: true\n        }\n    },\n    sort: {\n        session: {\n            doses: ['desc', 'desc'],\n        },\n        center: {\n\t\t\ttotalDoses: 'desc'\n        }\n    }\n}\n\nexport const fetchCalendarByDistrict = createAsyncThunk('cowin/calendarByDistrict',\n    async ({districtId, date}) => {\n    const response = await axios.get(\n        `https://cdn-api.co-vin.in/api/v2/appointment/sessions/public/calendarByDistrict?district_id=\n            ${districtId}&date=${date}`);\n    return response.data;\n});\n\nexport const fetchCalendarByCenter = createAsyncThunk('cowin/calendarByCenter',\nasync ({centerId, date}) => {\n    const response = await axios.get(\n        `https://cdn-api.co-vin.in/api/v2/appointment/sessions/public/calendarByCenter?center_id=\n    ${centerId}&date=${date}`);\n    return response.data[\"centers\"];\n});\n\nexport const fetchStates = createAsyncThunk('cowin/fetchStates',\n    async () => {\n    const response = await axios.get(\n        `https://cdn-api.co-vin.in/api/v2/admin/location/states`);\n    return response.data;\n});\n\nexport const fetchDistricts = createAsyncThunk('cowin/fetchDistricts',\n    async ({stateId}) => {\n    const response = await axios.get(\n        `https://cdn-api.co-vin.in/api/v2/admin/location/districts/${stateId}`);\n    return response.data;\n});\n\nexport const fetchVaccinationReports = createAsyncThunk('cowin/fetchVaccinationReports',\n    async ({stateId, districtId, date}) => {\n        const response = await axios.get(`https://api.cowin.gov.in/api/v1/reports/v2/getVacPublicReports?\n        state_id=${stateId}&district_id=${districtId}&date=${date}`);\n        return response.data\n    })\n\nexport const fetchPublicReports = createAsyncThunk('cowin/fetchPublicReports',\n    async ({stateId, districtId, date}) => {\n        const response = await axios.get(`https://api.cowin.gov.in/api/v1/reports/v2/getPublicReports?\n        state_id=${stateId}&district_id=${districtId}&date=${date}`);\n        return response.data\n    })\n\nexport const cowinSlice = createSlice({\n    name: 'cowin',\n    initialState,\n    reducers: {\n        resetDistrictStore: (state) => {\n            state.districts = [];\n        },\n        resetCalendarByDistrictStore: (state) => {\n            state.calendarByDistrict = { centers: [] };\n        },\n        setSelectedState: (state, action) => {\n            const { stateName } = action.payload;\n            state.selected.stateEnt.stateName = stateName;\n            state.status.calendarByDistrict = 'idle';\n            if (action.payload.stateId) {\n                state.selected.stateEnt.stateId = action.payload.stateId;\n            }\n            else {\n                state.selected.stateEnt.stateId = null;\n            }\n        },\n        setCalendarByCenterStatus: (state, action) => {\n            const { centerId, fetchStatus } = action.payload;\n            state.status.calendarByCenter[centerId] = fetchStatus;\n        },\n        setSelectedDistrict: (state, action) => {\n            const { districtName } = action.payload;\n            state.selected.districtEnt.districtName = districtName;\n            if (action.payload.districtId) {\n                state.selected.districtEnt.districtId = action.payload.districtId;\n            }\n            else {\n                state.selected.districtEnt.districtId = null\n            }\n        },\n        setFeeFilter: (state, action) => {\n            const { feeType, typeSelected } = action.payload;\n            state.filters.feeType[feeType] = typeSelected;\n        },\n        setKeywordFilter: (state, action) => {\n            state.filters.keywords = action.payload;\n        },\n        setVaccineFilter: (state, action) => {\n            const { vaccine, value } = action.payload;\n            switch (vaccine) {\n                case \"COVAXIN\":\n                    state.filters.vaccines.covaxin.checked = value;\n                    break;\n                case \"COVISHIELD\":\n                    state.filters.vaccines.covishield.checked = value;\n                    break;\n                case \"SPUTNIK V\":\n                    state.filters.vaccines.sputnik.checked = value;\n                    break;\n                default:\n                    break;\n            }\n        },\n\t\t// setAgeFilter: (state, action) => {\n\t\t// \tconst { minAge, maxAge } = action.payload;\n\t\t// \tstate.filters.ages.minAge = minAge;\n\t\t// \tstate.filters.ages.maxAge = maxAge;\n\t\t// }\n\t\tsetAgeFilter: (state, action) => {\n\t\t\tconst { age, value } = action.payload;\n\t\t\tswitch (age) {\n\t\t\t\tcase \"age-15-above\":\n\t\t\t\t\tstate.filters.ages.fifteenAbove = value;\n\t\t\t\t\tbreak;\n\t\t\t\tcase \"age-18-44\":\n\t\t\t\t\tstate.filters.ages.eighteenFortyFour = value;\n\t\t\t\t\tbreak;\n\t\t\t\tcase \"age-45-above\":\n\t\t\t\t\tstate.filters.ages.fortyFiveAbove = value;\n\t\t\t\t\tbreak;\n\t\t\t\tdefault:\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n    },\n    extraReducers: {\n        [fetchCalendarByDistrict.pending]: (state) => {\n            state.status.calendarByDistrict = 'loading';\n        },\n        [fetchCalendarByDistrict.fulfilled]: (state, action) => {\n            state.status.calendarByDistrict = 'succeeded';\n            state.calendarByDistrict = action.payload;\n        },\n        [fetchCalendarByDistrict.rejected]: (state, action) => {\n            state.status.calendarByDistrict = 'failed';\n            state.error.calendarByDistrict = action.error.message;\n        },\n        [fetchCalendarByCenter.pending]: (state, action) => {\n            let center = action.meta.arg.centerId;\n            state.status.calendarByCenter[center] = 'idle'\n        },\n        [fetchCalendarByCenter.fulfilled]: (state, action) => {\n            let center = action.meta.arg.centerId;\n            state.status.calendarByCenter[center] = 'succeeded';\n            state.calendarByCenter[center] = action.payload;\n        },\n        [fetchCalendarByCenter.rejected]: (state, action) => {\n            // let center = action.error.id;\n            let center = action.meta.arg.centerId;\n            state.status.calendarByCenter[center] = 'failed';\n            state.error.calendarByCenter[center] = action.error.message;\n        },\n        [fetchStates.pending]: (state) => {\n            state.status.states = 'loading';\n        },\n        [fetchStates.fulfilled]: (state, action) => {\n            state.status.states = 'succeeded';\n            //Here we select the slates key from the response\n            // Response: {\n            //  states: []\n            // }\n            state.states = action.payload.states;\n        },\n        [fetchStates.rejected]: (state, action) => {\n            state.status.states = 'failed';\n            state.error.states = action.error.message;\n        },\n        [fetchDistricts.pending]: (state) => {\n            state.status.districts = 'loading';\n        },\n        [fetchDistricts.fulfilled]: (state, action) => {\n            state.status.districts = 'succeeded';\n            state.districts = action.payload.districts;\n        },\n        [fetchDistricts.rejected]: (state, action) => {\n            state.status.districts = 'failed';\n            state.error.districts = action.error.message;\n        },\n        [fetchVaccinationReports.fulfilled]: (state, action) => {\n            state.status.vaccinationReports = 'succeeded';\n            state.error.vaccinationReports = null;\n            state.vaccinationReports = action.payload;\n        },\n        [fetchVaccinationReports.rejected]: (state, action) => {\n            state.status.vaccinationReports = 'failed';\n            state.error.vaccinationReports = action.error.message;\n        },\n        [fetchPublicReports.fulfilled]: (state, action) => {\n            state.status.publicReports = 'succeeded';\n            state.error.publicReports = null;\n            state.publicReports = action.payload;\n        },\n        [fetchPublicReports.rejected]: (state, action) => {\n            state.status.publicReports = 'failed';\n            state.error.publicReports = action.error.message;\n        }\n    },\n});\n\n\n\nexport const { resetDistrictStore,\n    resetCalendarByDistrictStore,\n    setKeywordFilter,\n    setFeeFilter,\n    setVaccineFilter,\n\tsetAgeFilter,\n    setSelectedState,\n    setSelectedDistrict,\n    setCalendarByCenterStatus\n} = cowinSlice.actions;\n\nexport const selectCalendarByDistrict = (state) => state.cowin.calendarByDistrict.centers;\nexport const selectCalendarByCenter = (state) => state.cowin.calendarByCenter;\n\nexport const selectKeywordFilter = (state) => state.cowin.filters.keywords;\nexport const selectFeeFilters = (state) => state.cowin.filters.feeType;\nexport const selectVaccineFilter = (state) => state.cowin.filters.vaccines;\nexport const selectAgeFilter = (state) => state.cowin.filters.ages;\n\nexport const selectAllStates = (state) => state.cowin.states;\nexport const selectAllDistricts = (state) => state.cowin.districts;\nexport const selectSelectedState = (state) => state.cowin.selected.stateEnt;\nexport const selectSelectedDistrict = (state) => state.cowin.selected.districtEnt;\n\n// export const selectVaxReportsLastThirtyDays = (state) => state.cowin.vaccinationReports.last30DaysVaccination;\n// export const selectPublicReports = (state) => state.cowin.publicReports;\n// export const selectPublicReportsBeneficiaries = (state) => state.cowin.publicReports.getBeneficiariesGroupBy;\n\nexport const selectFilteredData = createSelector(\n    selectCalendarByDistrict,\n    selectFeeFilters,\n    selectKeywordFilter,\n    selectVaccineFilter,\n    selectAgeFilter,\n    (state) => state.cowin.sort,\n    (centers, feeFilters, keywords, vaccines, ages, sort) => {\n        let transformations = []\n        if (feeFilters[\"Free\"] !== feeFilters[\"Paid\"]) {\n            if (feeFilters[\"Free\"]) {\n                transformations.push(filterIsFree);\n            }\n            else if (feeFilters[\"Paid\"]) {\n                transformations.push(filterIsPaid);\n            }\n        }\n        // if (vaccines) {\n        //     let selectedVaccines = Object.keys(pickBy(vaccine => vaccine, vaccines));\n        //     console.log(selectedVaccines)\n        //     transformations.push(partialRight(filterByVaccine, [selectedVaccines]));\n        // }\n        if (vaccines) {\n            let selectedVaccines = pickBy(vaccine => vaccine.checked, vaccines);\n            let nextVaccines = [];\n            Object.values(selectedVaccines).forEach(vaccine => nextVaccines.push(vaccine.name));\n            if (nextVaccines.length > 0) {\n                transformations.push(partialRight(filterByVaccine, [nextVaccines]));\n            }\n        }\n\t\tif (ages) {\n\t\t\ttransformations.push(partialRight(filterByAgeCategory, [ages]))\n\t\t}\n        if (keywords.length > 0) {\n            transformations.push(partialRight(filterByKeyword, [keywords]));\n        }\n\t\t// TODO: vaccine price sorting\n        // Implementing a drag-drop interface with the ability to rank the sorts would be amazing.\n\t\ttransformations.push(partialRight(sortByCenterTotalDoses, [[sort.center.totalDoses]]));\n\t\t// Sort slots within a center by dose count\n        // transformations.push(partialRight(sortByDosesWithinCenter, [sort.session.doses]));\n        // console.log(filters)\n        return flow(transformations)(centers);\n    }\n)\n\nexport default cowinSlice.reducer;\n","import {Icon, Intent, Tag} from \"@blueprintjs/core\";\nimport React from \"react\";\n\n/*\n* Session uses the Blueprintjs {@link https://blueprintjs.com/docs/#core/components/tag Tag} component to render a\n* session's details\n*\n* */\n\nfunction SessionTags(props) {\n    const { sessions } = props;\n\n    return (\n        <>\n            {sessions && sessions.map((session, id) => (\n                <Tag key={id} className=\"session\" intent={Intent.PRIMARY} minimal={true}>\n                    <Icon icon={\"calendar\"} />\n                    <span className=\"session-info\">{session.date}</span>\n                    <span className=\"session-info\">{session.vaccine}</span>\n                    <span className=\"session-info\">Dose 1: {session.available_capacity_dose1}</span>\n                    <span className=\"session-info\">Dose 2: {session.available_capacity_dose2}</span>\n                </Tag>\n            ))}\n        </>\n    )\n}\n\nfunction SessionTable(props) {\n    const { sessions } = props;\n\n    return (\n        <table className=\"bp3-html-table bp3-html-table-bordered bp3-html-table-condensed bp3-interactive sessions-table\">\n            <thead>\n            <tr>\n                <th>Date</th>\n                <th>Vaccine</th>\n                <th>Dose 1</th>\n                <th>Dose 2</th>\n                <th>Min. Age</th>\n                <th>Max. Age</th>\n            </tr>\n            </thead>\n            <tbody>\n            {sessions && sessions.map((session, id) => (\n                <tr key={id}>\n                    <td>\n                        {session.date}\n                    </td>\n                    <td>\n                        {session.vaccine}\n                    </td>\n                    <td>\n                        {session.available_capacity_dose1}\n                    </td>\n                    <td>\n                        {session.available_capacity_dose2}\n                    </td>\n                    <td>\n                        {session.min_age_limit || \"-\"}\n                    </td>\n                    <td>\n                        {session.max_age_limit || \"-\"}\n                    </td>\n                </tr>\n            ))}\n            </tbody>\n        </table>\n    )\n}\n\nexport { SessionTable, SessionTags };","import {createSlice} from \"@reduxjs/toolkit\";\n\nconst initialState = {\n    centers: JSON.parse(localStorage.getItem(\"starred\")) || []\n}\n\n\nexport const starredCentersSlice = createSlice({\n    name: 'starredCenters',\n    initialState,\n    reducers: {\n        resetStarredCenters: (state, _action) => {\n            localStorage.setItem(\"starred\", JSON.stringify([]));\n            state.centers = []\n        },\n        setStarredCenters: (state, action) => {\n            const { centers } = action.payload;\n            localStorage.setItem(\"starred\", JSON.stringify(centers));\n            state.centers = centers;\n        }\n    }\n});\n\nexport const {\n    resetStarredCenters,\n    setStarredCenters\n} = starredCentersSlice.actions;\n\nexport const selectStarredCenters = (state) => state.starredCenters.centers;\n\nexport default starredCentersSlice.reducer;\n","import {Button, H5, Intent, Tag} from \"@blueprintjs/core\";\nimport React from \"react\";\nimport {SessionTable, SessionTags} from \"./Session\";\nimport {useDispatch, useSelector} from \"react-redux\";\nimport {selectStarredCenters, setStarredCenters} from \"../starred-centers/starredCentersSlice\";\nimport {setCalendarByCenterStatus} from \"../cowin/cowinSlice\";\nimport {AppToaster} from \"../../App\";\n\n/*\n* Defines the Blueprintjs Intent color to use with a particular fee type\n*\n* */\nconst feeType = {\n    \"Paid\": Intent.WARNING,\n    \"Free\": Intent.SUCCESS\n}\n\n/*\n* CenterCard component renders a center and its Cowin using the Session component. Currently, every session\n* is rendered a Tag, but it's not very good looking.\n*\n* */\nfunction CenterCard(props) {\n    const {center, loading = false, showStarButton = true} = props;\n    // maybe lift viewType and starred to finder itself\n    const viewType = useSelector((state => state.settings.calendarByDistrictView));\n    const dispatch = useDispatch();\n    const starred = useSelector(selectStarredCenters);\n\n    if (loading) {\n        return (\n            <div key={center} className=\"center bp3-elevation-1\">\n                <div className=\"center-info-container\">\n                    <span className=\"center-name bp3-skeleton\">Loading</span>\n                    <Tag className=\"center-fee-type bp3-skeleton\" intent={Intent.PRIMARY}>\n                        Loading\n                    </Tag>\n                    <div className=\"vaccine-fee-tags\">\n                        <Tag key={1} className=\"fee-type bp3-skeleton\">Loading</Tag>\n                        <Tag key={1} className=\"fee-type bp3-skeleton\">Loading</Tag>\n                        <Tag key={1} className=\"fee-type bp3-skeleton\">Loading</Tag>\n                    </div>\n                    <Button className={\"bp3-skeleton\"} icon={\"star\"}/>\n                </div>\n                <div className=\"center-info-container\">\n                    <span className=\"center-info bp3-skeleton\">Loading</span>\n                    <span className=\"center-info block-name bp3-skeleton\">Loading</span>\n                </div>\n                <div className=\"sessions-skeleton bp3-skeleton\">\n                    Loading\n                </div>\n            </div>\n        )\n    }\n\n    let content;\n    if (viewType === \"table\") {\n        content = <SessionTable sessions={center.sessions}/>\n    } else if (viewType === \"tags\") {\n        content = <SessionTags sessions={center.sessions}/>\n    }\n\n    const starCenter = (event, centerId) => {\n        dispatch(setCalendarByCenterStatus({centerId: centerId, fetchStatus: \"idle\"}))\n        dispatch(setStarredCenters({centers: [...starred, centerId]}));\n        let starredNavLink = {\n            href: `${process.env.PUBLIC_URL}/starred`,\n            text: \"See here\"\n        };\n        AppToaster.show({\n            message: \"Center starred!\",\n            intent: Intent.SUCCESS,\n            icon: \"star\",\n            action: starredNavLink\n        });\n    }\n\n    const unstarCenter = (event, centerId) => {\n        const nextStarredCenters = starred.filter((val) => val !== centerId);\n        dispatch(setStarredCenters({centers: nextStarredCenters}));\n    }\n\n    const starButton = (centerId) => {\n        if (starred.includes(centerId)) {\n            return <Button\n                className=\"center-star-button\"\n                icon={\"star\"} text={\"Remove\"}\n                onClick={(event) => unstarCenter(event, center.center_id)}\n                small={true}\n            />\n        }\n        return <Button\n            className=\"center-star-button\"\n            icon={\"star-empty\"} text={\"Star\"}\n            onClick={(event) => starCenter(event, center.center_id)}\n            small={true}\n        />\n    }\n\n    return (\n        <div key={center.center_id} className=\"center bp3-elevation-1\">\n            <div className=\"center-info-container\">\n                <H5>{center.name}</H5>\n            </div>\n            <div className=\"center-info-container center-actions\">\n                <Tag className=\"center-fee-type\" intent={feeType[center.fee_type]}>\n                    {center.fee_type}\n                </Tag>\n                {center.vaccine_fees && center.vaccine_fees.map((vaccine_fee, id) => (\n                    <Tag key={id} className=\"fee-type\">\n                        {vaccine_fee.vaccine}: ₹ {vaccine_fee.fee}\n                    </Tag>\n                ))}\n                {\n                    showStarButton && starButton(center.center_id)\n                }\n            </div>\n            <div className=\"center-info-container\">\n                <span className=\"center-info\">{center.address}</span>\n                {center.block_name !== \"Not Applicable\" &&\n                    <span className=\"center-info block-name\">[Block: {center.block_name}]</span>\n                }\n            </div>\n            <div className=\"sessions\">\n                {content}\n            </div>\n        </div>\n    )\n}\n\nexport {CenterCard};","import React from \"react\";\nimport {Button, MenuItem} from \"@blueprintjs/core\";\nimport {Select} from \"@blueprintjs/select\";\n\n/*\n* Simple filtering function, extracted here so that it doesn't have to repeated in both\n* State and District Selectors\n*\n* */\nconst filterList = (query, title, _index, exactMatch) => {\n    const normalizedTitle = title.toLowerCase();\n    const normalizedQuery = query.toLowerCase();\n\n    if (exactMatch) {\n        return normalizedTitle === normalizedQuery;\n    } else {\n        return normalizedTitle.indexOf(normalizedQuery) >= 0;\n    }\n}\n\n/*\n* StateSelector uses the {@link https://blueprintjs.com/docs/#select Blueprintjs Select} component,\n* provides a list of states to filter and choose from.\n* TODO Consider merging both State and District selectors and managing\n*  differences through props.\n*\n* */\nconst StateSelector = React.memo((props) => {\n    const {setState, selectedState, states} = props;\n\n    const renderInputValue = (state) => state.state_name;\n\n    // Handle State selector value change\n    const handleValueChange = (state, _event) => {\n        setState(state);\n    }\n\n    // Render a Blueprintjs Menu Item for every state\n    const renderItem = (state, {handleClick, _modifiers, _query}) => {\n        return (\n            <MenuItem key={state.state_id} text={state.state_name} onClick={handleClick}/>\n        );\n    }\n\n    // Called by the {@link https://blueprintjs.com/docs/#select Blueprintjs Select} component whenever\n    // the query has a new input keyword. Select will provide query,\n    // the State item {state_name: string, state_id: string} the index and exactMatch.\n    const filterStates = (query, state, index, exactMatch) => {\n        return filterList(query, state.state_name, index, exactMatch)\n    }\n\n    return (\n        <div className=\"slot-toolbar-item selector\">\n            <Select\n                fill={true}\n                items={states}\n                popoverProps={{popoverClassName: \"selector-popover\", minimal: true}}\n                inputValueRenderer={renderInputValue}\n                itemRenderer={renderItem}\n                onItemSelect={handleValueChange}\n                itemPredicate={filterStates}\n                noResults={<MenuItem disabled={true} text=\"No results.\"/>}\n            >\n                <Button fill={true} text={selectedState.stateName} rightIcon=\"caret-down\"/>\n            </Select>\n        </div>\n    )\n});\n\n\n/*\n* DistrictSelector uses the {@link https://blueprintjs.com/docs/#select Blueprintjs Select} component,\n* provides a list of districts to filter and choose from.\n*\n* */\nconst DistrictSelector = React.memo((props) => {\n    const {setDistrict, selectedDistrict, districts} = props;\n    // const districts = useSelector(selectAllDistricts);\n\n    const renderDistrictInputValue = (district) => district.district_name;\n\n    const renderDistrictItem = (district, {handleClick, _modifiers, _query}) => {\n        return (\n            <MenuItem key={district.district_id} text={district.district_name} onClick={handleClick}/>\n        )\n    }\n\n    const districtSelected = (district, _event) => {\n        setDistrict(district);\n    }\n\n    // Called by the Blueprintjs Select component whenever the query has a new input keyword.\n    // Select will provide query, the State item {district_name: string, district_id: string},\n    // the index and exactMatch.\n    const filterDistricts = (query, district, index, exactMatch) => {\n        return filterList(query, district.district_name, index, exactMatch);\n    }\n\n    return (\n        <div className=\"slot-toolbar-item selector\">\n            <Select\n                fill={true}\n                items={districts}\n                popoverProps={{popoverClassName: \"selector-popover\", minimal: true}}\n                inputValueRenderer={renderDistrictInputValue}\n                itemRenderer={renderDistrictItem}\n                onItemSelect={districtSelected}\n                itemPredicate={filterDistricts}\n                noResults={<MenuItem disabled={true} text=\"No results.\"/>}\n            >\n                <Button fill={true} text={selectedDistrict.districtName} rightIcon=\"caret-down\"/>\n            </Select>\n        </div>\n    )\n});\n\nexport {StateSelector, DistrictSelector};\n","import {Alignment, Checkbox, ControlGroup} from \"@blueprintjs/core\";\nimport React from \"react\";\nimport {useDispatch, useSelector} from \"react-redux\";\nimport {selectFeeFilters, setFeeFilter} from \"../../cowin/cowinSlice\";\n\n/*\n* Free/Paid fee type filtering checkbox component.\n* It dispatches the setFeeFilter action whenever checkbox state changes.\n* See cowinSlice as to how the filtering works\n* */\nfunction FeeTypeFilters(props) {\n    const dispatch = useDispatch();\n    const feeFilter = useSelector(selectFeeFilters);\n    const { alignmentVertical } = props;\n\n    // @param {String} feeTypeVal Free or Paid\n    // Update feeFilter[feeTypeVal] state in store by NOT(current value)\n    // See cowinSlice for \"filter\" object structure\n    const feeTypeChange = (event, feeTypeVal) => {\n        dispatch(setFeeFilter({feeType: feeTypeVal, typeSelected: !feeFilter[feeTypeVal]}));\n    }\n\n    return (\n        <ControlGroup\n            className=\"fee-types\"\n            fill={true}\n            vertical={alignmentVertical}\n        >\n            <Checkbox\n                className=\"fee-type-checkbox\"\n                label={\"Free\"}\n                checked={feeFilter[\"Free\"]}\n                onChange={(event) => feeTypeChange(event, \"Free\")}\n                alignIndicator={Alignment.RIGHT}\n            />\n            <Checkbox\n                className=\"fee-type-checkbox\"\n                label={\"Paid\"}\n                checked={feeFilter[\"Paid\"]}\n                onChange={(event) => feeTypeChange(event, \"Paid\")}\n                alignIndicator={Alignment.RIGHT}\n            />\n        </ControlGroup>\n    )\n}\n\nexport { FeeTypeFilters };\n","/*\n* Returns the date in dd%mm%yy using the specified separator:%\n* @param {Date} d Date object\n* @param {String} separator Separator to use\n* */\nfunction formatDate(date, separator, formatId)  {\n    let month = date.getMonth();\n    let day = date.getDate().toString();\n    let year = date.getFullYear().toString();\n    let yearShort = year.substr(-2);\n    // month is zero-indexed\n    month = (month + 1).toString();\n    // Pad single digit month/dates with preceding 0\n    if (month.length === 1) {\n        month = \"0\" + month;\n    }\n    if (day.length === 1) {\n        day = \"0\" + day;\n    }\n    switch (formatId) {\n        case 1:\n            return [day, month, yearShort].join(separator);\n        case 2:\n            return [year, month, day].join(separator);\n        default:\n            return [day, month, yearShort].join(separator);\n    }\n}\n\nexport { formatDate };\n","import React from \"react\";\nimport {Button, Card, ControlGroup, Dialog, Icon, Switch} from \"@blueprintjs/core\";\nimport {useDispatch, useSelector} from \"react-redux\";\nimport { setCalendarByDistrictAutoRefreshInterval, setCalendarByDistrictView} from \"./settingsSlice\";\nimport \"./_settings.scss\"\n\nfunction Settings(props) {\n    const dispatch = useDispatch();\n    const { isOpen, setIsOpen } = props;\n    const view = useSelector(state => state.settings.calendarByDistrictView);\n    const autoRefresh = useSelector(state => state.settings.calendarByDistrictAutoRefresh);\n    const autoRefreshInt = useSelector(state => state.settings.calendarByDistrictAutoRefreshInterval);\n\n    const nickDisplayMap = {\n        \"table\": \"Table\",\n        \"tags\": \"Tags\",\n        4000: \"4 Seconds\",\n        5000: \"5 Seconds\",\n        6000: \"6 Seconds\",\n        10000: \"10 Seconds\",\n    }\n\n    const handleClose = () => setIsOpen(false);\n\n    const handleViewTypeChange = (event) => {\n        // event.preventDefault();\n        dispatch(setCalendarByDistrictView({viewName: event.target.value}));\n    }\n\n    // viewOptions items must exactly be the same as the nicknames for the settings used in settingsSlice\n    const viewOptions = [\"tags\", \"table\"];\n\n    const refreshOptions = [4000, 5000, 6000, 10000]\n\n    const handleAutoRefreshChange = (event) => {\n        if (event.target.checked) {\n            dispatch(setCalendarByDistrictAutoRefreshInterval({interval: 5000}));\n        }\n        else {\n            dispatch(setCalendarByDistrictAutoRefreshInterval({interval: null}));\n        }\n    }\n\n    const handleAutoRefreshValueChange = (event) => {\n        dispatch(setCalendarByDistrictAutoRefreshInterval({interval: event.target.value}));\n    }\n\n    // const isAutoRefreshEnabled = () => calByDist.autoRefresh;\n    \n    return (\n        <Dialog id=\"settings\" className=\"bp3-dialog settings-dialog\"\n                isOpen={isOpen}\n                canOutsideClickClose={true}\n                onClose={handleClose}\n                usePortal={false}\n        >\n            <div className=\"bp3-dialog-header\">\n                <h4 className=\"bp3-heading\">Settings</h4>\n                <Button\n                    aria-label=\"Close\"\n                    className=\"bp3-dialog-close-button bp3-button bp3-minimal\"\n                    icon={\"cross\"}\n                    onClick={handleClose}\n                >\n                </Button>\n            </div>\n            <div className=\"bp3-dialog-body\">\n                <Card className=\"settings-item\">\n                    <ControlGroup vertical={true}>\n                        <div className=\"settings-caption-vertical\">\n                            View appointments of a Center as\n                        </div>\n                        <div className=\"bp3-html-select\">\n                            <select onChange={handleViewTypeChange} value={view}>\n                                {\n                                    viewOptions && viewOptions.map((option, id) => (\n                                        <option key={id} value={option}>{nickDisplayMap[option]}</option>\n                                    ))\n                                }\n                            </select>\n                            <Icon icon={\"double-caret-vertical\"} />\n                        </div>\n                    </ControlGroup>\n                </Card>\n                <Card className=\"settings-item\">\n                    <ControlGroup fill={true}>\n                        <Switch\n                            label={\"Auto refresh data\"}\n                            checked={autoRefresh}\n                            onChange={handleAutoRefreshChange}\n                            alignIndicator={\"right\"}\n                        />\n                        <div className=\"settings-caption-horizontal\">\n                            Auto-refresh Interval\n                        </div>\n                        <div className=\"bp3-html-select\">\n                            <select onChange={handleAutoRefreshValueChange}\n                                    value={autoRefreshInt || \"\"}\n                                    disabled={!autoRefresh}\n                            >\n                                {\n                                    refreshOptions && refreshOptions.map((option, id) => (\n                                        <option key={id} value={option}>{nickDisplayMap[option]}</option>\n                                    ))\n                                }\n                            </select>\n                            <Icon icon={\"double-caret-vertical\"} />\n                        </div>\n                    </ControlGroup>\n                </Card>\n            </div>\n        </Dialog>\n    )\n}\n\nexport default Settings;","import { React, useState } from \"react\";\nimport \"./_filter-popover.scss\";\nimport { Checkbox, Alignment, Button, Intent, H6 } from \"@blueprintjs/core\";\nimport { Classes, Popover2 } from \"@blueprintjs/popover2\"\nimport { useSelector } from \"react-redux\";\nimport { selectAgeFilter, selectVaccineFilter, setAgeFilter, setVaccineFilter } from \"../../cowin/cowinSlice\";\nimport { useDispatch } from \"react-redux\";\nimport { FeeTypeFilters } from \"./FeeTypeFilters\";\n\nexport function FilterPopover() {\n\tconst dispatch = useDispatch();\n\tconst [isOpen, setIsOpen] = useState(false);\n\tconst vaccineFilter = useSelector(selectVaccineFilter);\n\tconst ageCategoryChecked = useSelector(selectAgeFilter)\n\n\tconst handleVaccineChange = (event, vaccine) => {\n\t\t// console.log(vaccine, event.target.checked);\n\t\tdispatch(setVaccineFilter({vaccine: vaccine, value: event.target.checked}));\n\t}\n\n\tconst handleAgeCategoryChange = (event) => {\n\t\tdispatch(setAgeFilter({age: event.target.id, value: event.target.checked}));\n\t}\n\n\treturn (\n\t\t<Popover2\n\t\t\tcontent={\n\t\t\t\t<div>\n\t\t\t\t\t<div className=\"filter-group\">\n\t\t\t\t\t\t<H6>Vaccines</H6>\n\t\t\t\t\t\t<Checkbox\n\t\t\t\t\t\t\tclassName=\"filter-item\"\n\t\t\t\t\t\t\tlabel={\"Covaxin\"}\n\t\t\t\t\t\t\tchecked={vaccineFilter.covaxin.checked}\n\t\t\t\t\t\t\tonChange={(event) => handleVaccineChange(event, \"COVAXIN\")}\n\t\t\t\t\t\t\talignIndicator={Alignment.RIGHT}\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<Checkbox\n\t\t\t\t\t\t\tclassName=\"filter-item\"\n\t\t\t\t\t\t\tlabel={\"Covishield\"}\n\t\t\t\t\t\t\tchecked={vaccineFilter.covishield.checked}\n\t\t\t\t\t\t\tonChange={(event) => handleVaccineChange(event, \"COVISHIELD\")}\n\t\t\t\t\t\t\talignIndicator={Alignment.RIGHT}\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<Checkbox\n\t\t\t\t\t\t\tclassName=\"filter-item\"\n\t\t\t\t\t\t\tlabel={\"Sputnik V\"}\n\t\t\t\t\t\t\tchecked={vaccineFilter.sputnik.checked}\n\t\t\t\t\t\t\tonChange={(event) => handleVaccineChange(event, \"SPUTNIK V\")}\n\t\t\t\t\t\t\talignIndicator={Alignment.RIGHT}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className=\"filter-group is-hidden-desktop\">\n\t\t\t\t\t\t<H6>Fee Type</H6>\n\t\t\t\t\t\t<FeeTypeFilters alignmentVertical={true} />\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className=\"filter-group\">\n\t\t\t\t\t\t<H6>Age</H6>\n\t\t\t\t\t\t<Checkbox\n\t\t\t\t\t\t\tclassName=\"filter-item\"\n\t\t\t\t\t\t\tid=\"age-15-above\"\n\t\t\t\t\t\t\tlabel={\"15 and above\"}\n\t\t\t\t\t\t\tchecked={ageCategoryChecked.fifteenAbove}\n\t\t\t\t\t\t\tonChange={handleAgeCategoryChange}\n\t\t\t\t\t\t\talignIndicator={Alignment.RIGHT}\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<Checkbox\n\t\t\t\t\t\t\tclassName=\"filter-item\"\n\t\t\t\t\t\t\tid=\"age-18-44\"\n\t\t\t\t\t\t\tlabel={\"18 to 44\"}\n\t\t\t\t\t\t\tchecked={ageCategoryChecked.eighteenFortyFour}\n\t\t\t\t\t\t\tonChange={(handleAgeCategoryChange)}\n\t\t\t\t\t\t\talignIndicator={Alignment.RIGHT}\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<Checkbox\n\t\t\t\t\t\t\tclassName=\"filter-item\"\n\t\t\t\t\t\t\tid=\"age-45-above\"\n\t\t\t\t\t\t\tlabel={\"45 and above\"}\n\t\t\t\t\t\t\tchecked={ageCategoryChecked.fortyFiveAbove}\n\t\t\t\t\t\t\tonChange={handleAgeCategoryChange}\n\t\t\t\t\t\t\talignIndicator={Alignment.RIGHT}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</div>\n\t\t\t\t\t<Button intent={Intent.DANGER} className={Classes.POPOVER2_DISMISS} text=\"Close\" fill={true}/>\n\t\t\t\t</div>\n\t\t\t}\n\t\t\tpopoverClassName={Classes.POPOVER2_CONTENT_SIZING}\n\t\t\tinteractionKind=\"click\"\n\t\t\tisOpen={isOpen}\n\t\t\tonInteraction={state => setIsOpen(state)}\n\t\t\tplacement=\"bottom\"\n\t\t>\n\t\t\t<Button icon=\"filter-list\" text=\"Filters\" />\n\t\t</Popover2>\n\t);\n}\n","import React, {useEffect, useRef, useState} from \"react\";\nimport {useDispatch, useSelector} from \"react-redux\";\nimport {\n    fetchCalendarByDistrict,\n    fetchDistricts,\n    fetchStates,\n    resetCalendarByDistrictStore,\n    resetDistrictStore, selectAllDistricts,\n    selectAllStates, selectCalendarByDistrict,\n    selectFilteredData,\n    selectKeywordFilter,\n    selectSelectedDistrict,\n    selectSelectedState,\n    setKeywordFilter,\n    setSelectedDistrict,\n    setSelectedState\n} from \"../cowin/cowinSlice\";\nimport \"./_finder.scss\";\nimport {CenterCard} from \"./Center\";\nimport {DistrictSelector, StateSelector} from \"./Selectors\";\nimport {\n    Button, ButtonGroup, Icon, Intent,\n    NonIdealState, Spinner, TagInput\n} from \"@blueprintjs/core\";\nimport {FeeTypeFilters} from \"./filters/FeeTypeFilters\";\nimport {formatDate} from \"../../utils/DateUtilities\";\nimport Settings from \"../settings/Settings\";\nimport {FilterPopover} from \"./filters/FilterPopover\";\nimport {useHistory} from \"react-router-dom\";\n\n/*\n* A component which shows the Available Slots (active slots returned by CoWIN API)\n* after the user selects a State and District.\n* It also allows filtering by attributes: keywords (center name, center address\n* and center block), fee type (Free/Paid).\n* */\nexport function Finder() {\n    const dispatch = useDispatch();\n    let history = useHistory();\n    const calendarFetchStatus = useSelector((state) => state.cowin.status.calendarByDistrict);\n    // Use the filtered calendarByDistrict data from the store\n    const states = useSelector(selectAllStates);\n    const districts = useSelector(selectAllDistricts);\n    const centers = useSelector(selectFilteredData);\n    const unfilteredCenters = useSelector(selectCalendarByDistrict)\n    const selectedState = useSelector(selectSelectedState);\n    const selectedDistrict = useSelector(selectSelectedDistrict);\n    const searchInputValues = useSelector(selectKeywordFilter);\n    const [isSettingsOpen, setSettingsOpen] = useState(false);\n    const autoRefresh = useSelector(state => state.settings.calendarByDistrictAutoRefresh);\n    const autoRefreshInterval = useSelector(state => state.settings.calendarByDistrictAutoRefreshInterval);\n    const statesFetchStatus = useSelector((state) => state.cowin.status.states);\n    const intervalRef = useRef();\n\n    const refreshData = () => {\n        if (selectedDistrict.districtName === \"Select a District\" || selectedState.stateName === \"Select a State\") {\n            return\n        }\n        let date = new Date();\n        date = formatDate(date, '-');\n        // console.log(\"Refreshing data\", new Date().toLocaleTimeString(), {districtName: selectedDistrict.districtName});\n        dispatch(fetchCalendarByDistrict({districtId: selectedDistrict.districtId, date: date}));\n    }\n\n    useEffect(() => {\n        if (autoRefresh) {\n            // console.log(\"Old timeout:\", intervalRef.current)\n            clearInterval(intervalRef.current);\n            let intervalId = setInterval(() => {\n                refreshData()\n            }, autoRefreshInterval);\n            intervalRef.current = intervalId;\n            // console.log(\"New timeout:\", intervalRef.current)\n            return () => clearInterval(intervalRef.current);\n        }\n    });\n\n    /*\n    * Decide what {content} to load in the \"centers\" div.\n    * Depending on the fetch status and filters, show nice contextual messages for each case.\n    * */\n    let content;\n    if (calendarFetchStatus === \"idle\" || selectedDistrict.district_name === \"Select a district\") {\n        content = <NonIdealState\n            icon={\"info-sign\"}\n            title={\"Select State and District\"}\n        >\n            <div>\n                <Icon icon={\"lightbulb\"} intent={Intent.WARNING}/>\n                Tip: Use the refresh button to refresh the data\n            </div>\n        </NonIdealState>\n    } else if (calendarFetchStatus === \"loading\") {\n        content = <Spinner className={\"centers-loading-spinner\"} intent={Intent.PRIMARY} size={50}/>\n    } else if (calendarFetchStatus === \"succeeded\") {\n        if (centers.length > 0) {\n            content = centers.map((center, id) => (\n                <CenterCard key={id} center={center}/>\n            ));\n        } else {\n            content = <NonIdealState\n                icon={\"zoom-out\"}\n                title={\"No centers match your query.\"}\n                description={\"It might be helpful to divide your query into multiple keywords.\"}\n            />\n        }\n    } else if (calendarFetchStatus === \"succeeded\" && unfilteredCenters.length === 0) {\n        content = <NonIdealState\n            icon={\"issue\"}\n            title={\"Currently, no slots are available.\"}\n            description={\"Please check again after sometime.\"}\n        />\n    } else if (calendarFetchStatus === \"failed\") {\n        content = <NonIdealState\n            icon={\"error\"}\n            title={\"There was a problem!\"}\n            description={\"Couldn't load data.\"}\n        />\n    }\n\n    // Clear Button element to clear/reset the Search bar\n    const clearButton = (\n        <Button\n            icon={\"cross\"}\n            minimal={true}\n            onClick={() => dispatch(setKeywordFilter([]))}\n        />\n    );\n\n    const toggleSettings = () => {\n        setSettingsOpen(!isSettingsOpen);\n    }\n\n    // Fetch states for StateSelector when it mounts\n    useEffect(() => {\n        if (statesFetchStatus === \"idle\") {\n            dispatch(fetchStates());\n        }\n    }, [statesFetchStatus, dispatch]);\n\n    const handleStateChange = (state) => {\n        // Changed the dispatch order here\n        // Reset the current District and Center list by resetting the store\n        dispatch(resetDistrictStore());\n        dispatch(resetCalendarByDistrictStore());\n        dispatch(setSelectedState({stateId: state.state_id, stateName: state.state_name}));\n        // Fetch new districts for the new State\n        dispatch(fetchDistricts({stateId: state.state_id}));\n        // Reset the District selector value\n        dispatch(setSelectedDistrict({districtName: \"Select a District\"}))\n    }\n\n    const handleDistrictChange = (district) => {\n        dispatch(setSelectedDistrict({districtId: district.district_id, districtName: district.district_name}))\n        let date = new Date();\n        date = formatDate(date, '-');\n        dispatch(fetchCalendarByDistrict({districtId: district.district_id, date: date}));\n    }\n\n    const toStarred = () => {\n        history.push(\"/starred\")\n    }\n\n    return (\n        <div className=\"slot-checker-container\">\n            <div className=\"slot-checker\">\n                <div className=\"slot-toolbar-container\">\n                    <div className=\"slot-toolbar\">\n                        <div className=\"slot-toolbar-item-group selectors\">\n                            <StateSelector\n                                states={states}\n                                selectedState={selectedState}\n                                setState={handleStateChange}\n                            />\n                            <DistrictSelector\n                                districts={districts}\n                                selectedDistrict={selectedDistrict}\n                                setDistrict={handleDistrictChange}\n                            />\n                        </div>\n                        <div className=\"slot-toolbar-item-group search-fee-type\">\n                            <TagInput\n                                className=\"slot-toolbar-item search\"\n                                leftIcon={\"search\"}\n                                placeholder={\"Search with multiple keywords..\"}\n                                onChange={(values => dispatch(setKeywordFilter(values)))}\n                                values={searchInputValues}\n                                rightElement={clearButton}\n                            />\n                            <div className=\"is-hidden-mobile slot-toolbar-item fee-types-container\">\n                                <FeeTypeFilters alignmentVertical={false}/>\n                            </div>\n                        </div>\n                        <div className=\"slot-toolbar-item-group menu-buttons\">\n                            <ButtonGroup className=\"menu-button-group\" fill={true}>\n                                <Button icon={\"refresh\"} text={\"Refresh\"} onClick={refreshData}/>\n                                <Button icon={\"star\"} text={\"Starred\"} onClick={toStarred}/>\n                                <FilterPopover/>\n                                <Button icon={\"settings\"} text={\"Settings\"} onClick={toggleSettings}/>\n                            </ButtonGroup>\n                        </div>\n                    </div>\n                </div>\n                <div className=\"centers\">\n                    {content}\n                </div>\n            </div>\n            <Settings isOpen={isSettingsOpen} setIsOpen={setSettingsOpen}/>\n        </div>\n    )\n}","import React from \"react\";\nimport {ReactComponent as Logo} from \"../../find-a-cowin.svg\";\nimport { Button, Classes, H3, TagInput } from \"@blueprintjs/core\";\nimport { Tooltip2 } from \"@blueprintjs/popover2\";\nimport \"./_home.scss\"\n\n\nexport function Home() {\n    return (\n        <div id=\"home\">\n            <div className=\"home-container\">\n\t\t\t\t<div className=\"home-content\">\n\t\t\t\t\t<Logo className=\"logo about-logo\"/>\n\t\t\t\t\t<span>A slot finder/checker for the CoWIN vaccination platform</span>\n\t\t\t\t\t<span>built using the CoWIN Public API.</span>\n\t\t\t\t\t<div className=\"home-links\">\n\t\t\t\t\t\t<a href=\"https://faraaz.tech/contact\">\n\t\t\t\t\t\t\t<Tooltip2 content={\"Get in touch\"} position={\"bottom\"}>\n\t\t\t\t\t\t\t\t<Button className={Classes.MINIMAL} icon=\"user\" text=\"faraaz.tech\" />\n\t\t\t\t\t\t\t</Tooltip2>\n\t\t\t\t\t\t</a>\n\t\t\t\t\t\t<a href=\"https://github.com/faraazb/find-a-cowin\">\n\t\t\t\t\t\t\t<Tooltip2 content={\"Check out the source code\"} position=\"bottom\">\n\t\t\t\t\t\t\t\t<Button className={Classes.MINIMAL} icon=\"git-branch\" text=\"GitHub\" />\n\t\t\t\t\t\t\t</Tooltip2>\n\t\t\t\t\t\t</a>\n\t\t\t\t\t</div>\n\t\t\t\t\t<H3 className=\"home-help-title\">Help regarding usage</H3>\n\t\t\t\t\t<div className=\"home-help\"> \n\t\t\t\t\t\t<table className=\"bp3-html-table bp3-html-table-bordered query-table\">\n\t\t\t\t\t\t\t<thead>\n\t\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<th>Query</th>\n\t\t\t\t\t\t\t\t<th>Answer</th>\n\t\t\t\t\t\t\t\t</tr>\n\t\t\t\t\t\t\t</thead>\n\t\t\t\t\t\t\t<tbody>\n\t\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>Nothing happens when I type in the search bar..</td>\n\t\t\t\t\t\t\t\t<td>Press enter key! This is so that you can use multiple keywords. \n\t\t\t\t\t\t\t\t\tFor e.g. <TagInput values={[\"Andheri\", \"Borivali\"]}/> to get all the centers \n\t\t\t\t\t\t\t\t\tthat match for <b>either</b> Andheri or Borivali.</td>\n\t\t\t\t\t\t\t\t</tr>\n\t\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>What does the refresh button do?</td>\n\t\t\t\t\t\t\t\t<td>It fetches the data again, without refreshing the page or resetting your filters.</td>\n\t\t\t\t\t\t\t\t</tr>\n\t\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>Where are starred centers saved?</td>\n\t\t\t\t\t\t\t\t<td>These are stored in your browser's local storage and cannot sync across devices.</td>\n\t\t\t\t\t\t\t\t</tr>\n\t\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>What does auto-refresh under Settings do?</td>\n\t\t\t\t\t\t\t\t<td>It regularly fetches new data for the selected district at the selected interval.</td>\n\t\t\t\t\t\t\t\t</tr>\n\t\t\t\t\t\t\t</tbody>\n\t\t\t\t\t\t</table>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n            </div>\n        </div>\n    );\n}\n","import { Button, Classes, H1 } from \"@blueprintjs/core\";\nimport React from \"react\";\nimport { NavLink } from \"react-router-dom\";\nimport \"./_four-o-four.scss\"\n\nexport function FourOFour() {\n    return (\n        <div id=\"four-o-four\">\n            <div className=\"four-o-four-container\">\n\t\t\t\t<div className=\"four-o-four-content\">\n\t\t\t\t\t<H1 className=\"four-o-four-title big\">404</H1>\n                    <H1 className=\"four-o-four-title\">Not Found</H1>\n\t\t\t\t\t<span>Please visit any of the below links.</span>\n\t\t\t\t\t<div className=\"four-o-four-links\">\n\t\t\t\t\t\t<NavLink to=\"/\">\n                            <Button className={Classes.MINIMAL} icon=\"search\" text=\"Slot Finder\" />\n\t\t\t\t\t\t</NavLink>\n\t\t\t\t\t\t<NavLink to=\"/about\">\n                            <Button className={Classes.MINIMAL} icon=\"info-sign\" text=\"About\" />\n\t\t\t\t\t\t</NavLink>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n            </div>\n        </div>\n    );\n}\n","import React, {useEffect} from \"react\";\nimport {Button, H3, Intent, Spinner} from \"@blueprintjs/core\";\nimport \"./_starred-centers.scss\";\nimport {NavLink} from \"react-router-dom\";\nimport {useDispatch, useSelector} from \"react-redux\";\nimport {resetStarredCenters, selectStarredCenters} from \"./starredCentersSlice\";\nimport {fetchCalendarByCenter, selectCalendarByCenter} from \"../cowin/cowinSlice\";\nimport {formatDate} from \"../../utils/DateUtilities\";\nimport {CenterCard} from \"../finder/Center\";\n\nexport const StarredCenters = () => {\n    const dispatch = useDispatch();\n    const initializeStarred = !localStorage.getItem(\"starred\");\n    const starred = useSelector(selectStarredCenters);\n    const centers = useSelector(selectCalendarByCenter);\n    const fetchStatus = useSelector((state) => state.cowin.status.calendarByCenter);\n\n    useEffect(() => {\n        if (initializeStarred) {\n            dispatch(resetStarredCenters());\n        }\n    })\n\n    useEffect(() => {\n        let date = new Date();\n        date = formatDate(date, '-');\n        for (let centerId of starred) {\n            if (fetchStatus[centerId] === \"idle\") {\n                dispatch(fetchCalendarByCenter({centerId: centerId, date: date}))\n            }\n        }\n    }, [starred, fetchStatus, dispatch]);\n\n    const getCenterContent = (centerId) => {\n        let content;\n        if (fetchStatus[centerId] === \"idle\") {\n            let date = new Date();\n            date = formatDate(date, '-');\n            dispatch(fetchCalendarByCenter({centerId: centerId, date: date}))\n            content = <CenterCard key={centerId} center={null} loading={true}/>\n        }\n        else if (fetchStatus[centerId] === \"loading\") {\n            content = <Spinner className={\"centers-loading-spinner\"} intent={Intent.PRIMARY} size={50} />\n        }\n        else if (fetchStatus[centerId] === \"succeeded\") {\n            let center = centers[centerId]\n            content = <CenterCard key={centerId} center={center} />\n        }\n        return content;\n    }\n\n    return (\n        <div className=\"starred-centers\">\n            <div className=\"header-container\">\n                <div className=\"header\">\n                    <NavLink to={\"/\"}>\n                        <Button icon={\"arrow-left\"} minimal={true}/>\n                    </NavLink>\n                    <H3 className=\"heading\">\n                        Starred Centers\n                    </H3>\n                </div>\n            </div>\n            <div className=\"centers\">\n                {\n                    starred.length === 0 && <div className=\"bp3-callout bp3-intent-warning\">\n                        <h4 className=\"bp3-heading\">\n                            No starred centers!\n                        </h4>\n                        Mark centers as starred using the <Button small={true} outlined={true}\n                                                                  icon={\"star\"} text={\"Star\"}/> button.\n                    </div>\n                }\n                {\n                    starred.length > 0 && starred.map((centerId, _id) => (\n                        getCenterContent(centerId)\n                    ))\n                }\n            </div>\n        </div>\n    )\n}","import './_app.scss';\nimport React, {useEffect, useState} from 'react';\nimport {ReactComponent as Logo} from \"./find-a-cowin.svg\";\nimport {useDispatch} from \"react-redux\";\nimport {resetSettings} from './features/settings/settingsSlice';\nimport {Finder} from \"./features/finder/Finder\";\nimport {BrowserRouter, NavLink, Route, Switch} from \"react-router-dom\";\nimport {\n    FocusStyleManager, Alignment, Button, Classes, Navbar, NavbarDivider, NavbarGroup,\n    NavbarHeading\n} from \"@blueprintjs/core\";\nimport {Home} from './features/home/Home';\nimport {FourOFour} from './features/FourOFour';\nimport {StarredCenters} from \"./features/starred-centers/StarredCenters\";\nimport {Position, Toaster} from \"@blueprintjs/core\";\n\n/** Singleton toaster instance. */\nexport const AppToaster = Toaster.create({\n    className: \"app-toaster\",\n    position: Position.TOP,\n});\n\nFocusStyleManager.onlyShowFocusOnTabs();\n\nfunction App() {\n    const dispatch = useDispatch();\n    const initializeSettings = !localStorage.getItem('SETTINGS')\n\n    const switchTheme = () => {\n        const div = document.getElementById(\"app\");\n        if (div.classList.contains(\"bp3-dark\")) {\n            div.classList.remove(\"bp3-dark\");\n            setThemeButton({name: \"Dark Theme\", icon: \"moon\"});\n        } else if (!div.classList.contains(\"bp3-dark\")) {\n            div.classList.add(\"bp3-dark\");\n            setThemeButton({name: \"Light Theme\", icon: \"flash\"});\n        }\n    }\n\n    const useThemeDetector = () => {\n        const getCurrentTheme = () => window.matchMedia(\"(prefers-color-scheme: dark)\").matches;\n        const [isDarkTheme, setIsDarkTheme] = useState(getCurrentTheme());\n\n        const mqListener = (e => {\n            setIsDarkTheme(e.matches);\n        });\n\n        useEffect(() => {\n            const darkThemeMq = window.matchMedia(\"(prefers-color-scheme: dark)\");\n            darkThemeMq.addEventListener(\"change\", mqListener);\n            return () => darkThemeMq.removeEventListener(\"change\", mqListener);\n        }, []);\n        return isDarkTheme;\n    }\n\n    const isDarkTheme = useThemeDetector()\n    const [themeButton, setThemeButton] = useState(\n        {\n            name: isDarkTheme ? \"Light Theme\" : \"Dark Theme\",\n            icon: isDarkTheme ? \"flash\" : \"moon\"\n        }\n    );\n\n    useEffect(() => {\n        if (isDarkTheme) {\n            const div = document.getElementById(\"app\");\n            div.classList.add(\"bp3-dark\");\n        }\n    }, [isDarkTheme])\n\n    useEffect(() => {\n        if (initializeSettings) {\n            // console.log(\"Resetting settings\")\n            dispatch(resetSettings());\n        }\n    });\n\n    return (\n        <BrowserRouter basename={process.env.PUBLIC_URL}>\n            <div id=\"app\">\n                <Navbar>\n                    <NavbarGroup align={Alignment.LEFT}>\n                        <NavLink to=\"/\" id=\"find-a-cowin\">\n                            <NavbarHeading className=\"navigation-header\">\n                                <Logo className=\"logo\"/>\n                            </NavbarHeading>\n                        </NavLink>\n                        <NavbarDivider className=\"navigation-divider\"/>\n                        <NavLink to=\"/about\">\n                            <Button className={Classes.MINIMAL} icon=\"info-sign\" text=\"About\"/>\n                        </NavLink>\n                    </NavbarGroup>\n                    <NavbarGroup align={Alignment.RIGHT}>\n                        <Button\n                            className={Classes.MINIMAL}\n                            icon={themeButton.icon}\n                            text={themeButton.name}\n                            onClick={switchTheme}\n                        />\n                    </NavbarGroup>\n                </Navbar>\n                <div className=\"app-route\">\n                    <Switch>\n                        <Route path=\"/starred\" exact={true}>\n                            <StarredCenters/>\n                        </Route>\n\n                        <Route path=\"/about\" exact={true}>\n                            <Home/>\n                        </Route>\n\n                        <Route exact path=\"/\">\n                            <Finder/>\n                        </Route>\n\n                        <Route path=\"*\">\n                            <FourOFour/>\n                        </Route>\n                    </Switch>\n                </div>\n            </div>\n        </BrowserRouter>\n    );\n}\n\nexport default App;\n","import { configureStore } from '@reduxjs/toolkit';\nimport cowinReducer from \"../features/cowin/cowinSlice\";\nimport settingsReducer from \"../features/settings/settingsSlice\";\nimport starredCentersReducer from \"../features/starred-centers/starredCentersSlice\"\n\nexport const store = configureStore({\n    reducer: {\n        cowin: cowinReducer,\n        settings: settingsReducer,\n        starredCenters: starredCentersReducer\n    },\n});","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport {store} from \"./app/store\";\nimport {Provider} from \"react-redux\";\nimport \"@blueprintjs/core/lib/css/blueprint.css\";\nimport \"@blueprintjs/popover2/lib/css/blueprint-popover2.css\";\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n      <Provider store={store}>\n          <App />\n      </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}