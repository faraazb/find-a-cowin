{"version":3,"sources":["find-a-cowin.svg","features/settings/settingsSlice.js","features/finder/filters/filters.js","features/finder/sorting/sorting.js","features/cowin/cowinSlice.js","features/finder/Session.jsx","features/starred-centers/starredCentersSlice.js","features/finder/Center.jsx","features/finder/Selectors.jsx","features/finder/filters/FeeTypeFilters.jsx","utils/DateUtilities.js","features/settings/Settings.jsx","features/finder/filters/FilterPopover.jsx","features/finder/Finder.jsx","features/home/Home.jsx","features/FourOFour.jsx","features/starred-centers/StarredCenters.jsx","App.jsx","app/store.js","reportWebVitals.js","index.js"],"names":["_g","_excluded","_extends","Object","assign","bind","target","i","arguments","length","source","key","prototype","hasOwnProperty","call","apply","this","_objectWithoutProperties","excluded","sourceKeys","keys","indexOf","_objectWithoutPropertiesLoose","getOwnPropertySymbols","sourceSymbolKeys","propertyIsEnumerable","SvgFindACowin","_ref","svgRef","title","titleId","props","width","height","viewBox","xmlns","ref","id","strokeLinecap","fillRule","d","vectorEffect","ForwardRef","settingsMap","defaultSettings","initialState","calendarByDistrictView","localStorage","getItem","calendarByDistrictAutoRefresh","calendarByDistrictAutoRefreshInterval","parseInt","settingsSlice","createSlice","name","reducers","resetSettings","state","action","setItem","setCalendarByDistrictView","viewName","payload","setCalendarByDistrictAutoRefreshInterval","interval","removeItem","toString","actions","isFree","centers","filter","center","fee_type","isPaid","byVaccine","vaccines","filteredCenters","some","session","includes","vaccine","sessions","newCenters","forEach","newCenter","clone","push","byKeyword","keywords","center_id","address","block_name","join","toLowerCase","el","byAge","ages","minAge","maxAge","min_age_limit","max_age_limit","byCenterTotalDoses","sortOrder","orderBy","sumBy","available_capacity","states","districts","selected","stateEnt","stateName","stateId","districtEnt","districtName","districtId","calendarByDistrict","calendarByCenter","vaccinationReports","publicReports","status","JSON","parse","getCalendarByStarredCenters","error","filters","feeType","covaxin","checked","covovax","corbevax","covishield","sputnik","sort","doses","totalDoses","fetchCalendarByDistrict","createAsyncThunk","a","date","axios","get","response","data","fetchCalendarByCenter","centerId","fetchStates","fetchDistricts","fetchVaccinationReports","fetchPublicReports","cowinSlice","resetDistrictStore","resetCalendarByDistrictStore","setSelectedState","setCalendarByCenterStatus","fetchStatus","setSelectedDistrict","setFeeFilter","typeSelected","setKeywordFilter","setVaccineFilter","value","setAgeFilter","extraReducers","pending","fulfilled","rejected","message","meta","arg","selectCalendarByDistrict","cowin","selectCalendarByCenter","selectKeywordFilter","selectFeeFilters","selectVaccineFilter","selectAgeFilter","selectAllStates","selectAllDistricts","selectSelectedState","selectSelectedDistrict","selectFilteredData","createSelector","feeFilters","transformations","filterIsFree","filterIsPaid","selectedVaccines","pickBy","nextVaccines","values","partialRight","filterByVaccine","filterByAge","filterByKeyword","sortByCenterTotalDoses","flow","SessionTags","map","className","intent","Intent","PRIMARY","minimal","icon","available_capacity_dose1","available_capacity_dose2","SessionTable","starredCentersSlice","resetStarredCenters","_action","stringify","setStarredCenters","selectStarredCenters","starredCenters","WARNING","SUCCESS","CenterCard","content","loading","showStarButton","viewType","useSelector","settings","dispatch","useDispatch","starred","vaccine_fees","vaccine_fee","fee","text","onClick","event","nextStarredCenters","val","unstarCenter","small","starredNavLink","href","process","AppToaster","show","starCenter","filterList","query","_index","exactMatch","normalizedTitle","normalizedQuery","StateSelector","React","memo","setState","selectedState","fill","items","popoverProps","popoverClassName","inputValueRenderer","state_name","itemRenderer","handleClick","_modifiers","_query","state_id","onItemSelect","_event","itemPredicate","index","noResults","disabled","rightIcon","DistrictSelector","setDistrict","selectedDistrict","district","district_name","district_id","FeeTypeFilters","feeFilter","alignmentVertical","feeTypeChange","feeTypeVal","vertical","label","onChange","alignIndicator","Alignment","RIGHT","formatDate","separator","formatId","month","getMonth","day","getDate","year","getFullYear","yearShort","substr","Settings","isOpen","setIsOpen","view","autoRefresh","autoRefreshInt","nickDisplayMap","handleClose","viewOptions","refreshOptions","canOutsideClickClose","onClose","usePortal","option","FilterPopover","useState","vaccineFilter","handleVaccineChange","handleAgeValueChange","valueAsNum","valueAsStr","inputEl","changedValue","min","max","onValueChange","clampValueOnBlur","selectAllOnFocus","DANGER","Classes","POPOVER2_DISMISS","POPOVER2_CONTENT_SIZING","interactionKind","onInteraction","placement","Finder","history","useHistory","calendarFetchStatus","unfilteredCenters","searchInputValues","isSettingsOpen","setSettingsOpen","autoRefreshInterval","statesFetchStatus","intervalRef","useRef","refreshData","Date","useEffect","clearInterval","current","intervalId","setInterval","size","description","clearButton","leftIcon","placeholder","rightElement","Home","position","MINIMAL","FourOFour","to","StarredCenters","initializeStarred","outlined","_id","getCenterContent","Toaster","create","Position","TOP","FocusStyleManager","onlyShowFocusOnTabs","App","initializeSettings","isDarkTheme","window","matchMedia","matches","setIsDarkTheme","mqListener","e","darkThemeMq","addEventListener","removeEventListener","useThemeDetector","themeButton","setThemeButton","document","getElementById","classList","add","basename","align","LEFT","div","contains","remove","path","exact","store","configureStore","reducer","cowinReducer","settingsReducer","starredCentersReducer","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.f1a0f1b2.chunk.js","sourcesContent":["var _g;\n\nvar _excluded = [\"title\", \"titleId\"];\n\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport * as React from \"react\";\n\nfunction SvgFindACowin(_ref, svgRef) {\n  var title = _ref.title,\n      titleId = _ref.titleId,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    width: 657.364,\n    height: 79.731,\n    viewBox: \"0 0 657.364 79.731\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _g || (_g = /*#__PURE__*/React.createElement(\"g\", {\n    id: \"svgGroup\",\n    strokeLinecap: \"round\",\n    fillRule: \"evenodd\"\n  }, /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M 503.727 78.455 L 517.818 47.637 L 519.091 78.455 L 527.545 78.455 L 553.273 5.728 L 544 5.728 L 526.636 55.455 L 525.909 27.637 L 517.727 27.637 L 505.182 55.455 L 509.091 5.728 L 500 5.728 L 494.818 78.455 L 503.727 78.455 Z M 636.909 59.092 L 623.545 5.728 L 613.909 5.728 L 598.455 78.455 L 607.545 78.455 L 618.909 24.91 L 632.364 78.455 L 641.909 78.455 L 657.364 5.728 L 648.273 5.728 L 636.909 59.092 Z M 109.909 25.91 L 113.545 32.637 A 97.006 97.006 0 0 1 114.476 31.777 C 116.473 29.957 117.305 29.419 118.137 29.369 A 2.234 2.234 0 0 1 118.273 29.364 C 119.083 29.364 119.605 29.726 119.902 30.384 A 2.668 2.668 0 0 1 120 30.637 A 1.313 1.313 0 0 1 120.044 30.866 C 120.099 31.404 119.818 31.863 119.818 32.183 L 109.818 78.455 L 118.818 78.455 L 124.364 51.546 A 23.516 23.516 0 0 1 125.109 48.819 C 128.034 40.123 136.019 31.427 141.718 29.681 A 6.594 6.594 0 0 1 143.636 29.364 A 7.609 7.609 0 0 1 146.395 29.823 C 149.636 31.083 150.59 34.946 148.407 41.541 A 36.314 36.314 0 0 1 148.091 42.455 A 162.801 162.801 0 0 0 144.968 52.052 C 142.206 61.568 141.134 68.877 141.273 72.819 A 7.343 7.343 0 0 0 142.444 76.635 C 143.747 78.581 146.089 79.728 149.273 79.728 A 15.913 15.913 0 0 0 151.597 79.552 C 154.978 79.05 158.359 77.508 159.887 75.297 A 5.344 5.344 0 0 0 160.182 74.819 L 156.455 67.455 A 11.238 11.238 0 0 1 155.34 69.152 C 154.235 70.531 152.953 71.364 151.818 71.364 A 2.559 2.559 0 0 1 151.014 71.246 C 150.489 71.072 150.125 70.705 150.021 70.147 A 1.749 1.749 0 0 1 150 70.001 C 149.659 66.457 151.26 59.952 153.729 51.938 A 438.876 438.876 0 0 1 156.455 43.455 C 161.129 29.432 157.181 21.186 145.049 21.004 A 27.543 27.543 0 0 0 144.636 21.001 A 13.647 13.647 0 0 0 140.221 21.789 C 137.46 22.736 134.554 24.531 131.713 27.146 A 37.785 37.785 0 0 0 129.091 29.819 A 6.785 6.785 0 0 0 129.289 28.488 C 129.418 25.722 127.758 23.308 125.194 22.012 A 9.693 9.693 0 0 0 120.818 21.001 A 15.913 15.913 0 0 0 118.493 21.177 C 115.113 21.679 111.732 23.22 110.204 25.432 A 5.344 5.344 0 0 0 109.909 25.91 Z M 428.818 62.183 L 420.636 58.546 C 416.16 67.338 413.09 70.579 406.915 71.233 A 25.977 25.977 0 0 1 404.182 71.364 C 393.091 71.364 391.182 64.728 395.909 42.728 A 141.063 141.063 0 0 1 398.242 33.212 C 400.191 26.427 402.366 21.638 405.062 18.414 A 15.61 15.61 0 0 1 418.091 12.819 A 20.083 20.083 0 0 1 421.542 13.064 C 426.046 13.861 427.329 16.83 428 25.183 L 436.909 22.91 A 40.725 40.725 0 0 0 435.966 16.211 C 433.94 7.756 428.852 4.455 418.364 4.455 A 30.37 30.37 0 0 0 406.469 6.526 C 397.055 10.488 391.77 20.468 387.528 39.286 A 200.05 200.05 0 0 0 387.091 41.274 A 160.483 160.483 0 0 0 385.897 47.475 C 381.919 70.76 386.806 79.728 403.909 79.728 A 34.911 34.911 0 0 0 411.206 79.058 C 418.281 77.544 422.872 73.277 427.675 64.378 A 86.652 86.652 0 0 0 428.818 62.183 Z M 600.364 5.728 L 561.818 5.728 L 560.091 14.092 L 574.727 14.092 L 562.909 70.092 L 548.182 70.092 L 546.364 78.455 L 584.909 78.455 L 586.727 70.092 L 572 70.092 L 583.818 14.092 L 598.636 14.092 L 600.364 5.728 Z M 58.545 5.728 L 15.455 5.728 L 0 78.455 L 9.091 78.455 L 15.455 48.364 L 37.364 48.364 L 39.091 40.001 L 17.364 40.001 L 22.727 14.092 L 56.818 14.092 L 58.545 5.728 Z M 205.545 67.637 L 218.818 5.728 L 209.818 5.728 L 205.455 24.819 A 13.153 13.153 0 0 0 201.229 22.121 C 199.857 21.57 198.324 21.199 196.652 21.061 A 17.879 17.879 0 0 0 195.182 21.001 A 27.142 27.142 0 0 0 172.307 34.397 C 169.542 38.664 167.477 43.789 166.294 49.534 A 52.491 52.491 0 0 0 166.182 50.092 A 128.953 128.953 0 0 0 165.298 55.089 C 162.559 72.757 166.14 79.728 179.909 79.728 A 51.639 51.639 0 0 0 184.518 79.54 C 191.153 78.943 194.271 76.968 196.455 74.183 C 196.615 77.712 198.828 79.331 202.719 79.663 A 19.394 19.394 0 0 0 204.364 79.728 A 15.913 15.913 0 0 0 206.688 79.552 C 210.069 79.05 213.45 77.508 214.978 75.297 A 5.344 5.344 0 0 0 215.273 74.819 L 211.545 67.455 A 11.238 11.238 0 0 1 210.431 69.152 C 209.326 70.531 208.044 71.364 206.909 71.364 A 3.167 3.167 0 0 1 206.296 71.311 C 204.881 71.031 205.141 69.657 205.545 67.637 Z M 321.727 74.819 L 318 67.455 A 11.238 11.238 0 0 1 316.886 69.152 C 315.781 70.531 314.499 71.364 313.364 71.364 A 5.184 5.184 0 0 1 312.705 71.328 C 311.135 71.125 311.332 70.057 311.818 67.546 C 318.385 37.914 319.393 32.888 319.393 31.054 A 4.22 4.22 0 0 0 319.364 30.546 A 9.213 9.213 0 0 0 318.276 25.907 C 316.438 22.683 312.234 21.112 305.385 21.007 A 48.766 48.766 0 0 0 304.636 21.001 C 289.677 21.001 273.091 41.796 273.091 62.197 A 37.569 37.569 0 0 0 273.091 62.364 A 22.987 22.987 0 0 0 273.083 62.969 C 273.083 72.999 279.747 79.728 289.818 79.728 C 294.182 79.728 298.818 77.637 302.455 73.91 A 1.052 1.052 0 0 1 302.433 73.888 C 302.3 73.747 302.54 73.886 302.713 73.573 A 0.726 0.726 0 0 0 302.727 73.546 C 302.884 76.44 305.26 78.93 308.931 79.569 A 10.995 10.995 0 0 0 310.818 79.728 A 15.913 15.913 0 0 0 313.143 79.552 C 316.524 79.05 319.905 77.508 321.432 75.297 A 5.344 5.344 0 0 0 321.727 74.819 Z M 101.364 68.274 L 94.636 63.546 A 103.729 103.729 0 0 1 93.388 65.271 C 90.036 69.79 88.202 71.183 84.905 71.347 A 14.525 14.525 0 0 1 84.182 71.364 A 17.328 17.328 0 0 1 80.62 71.048 C 75.733 70.01 74.191 66.227 76.505 56.844 A 67.692 67.692 0 0 1 77.091 54.637 L 82.636 34.819 A 13.248 13.248 0 0 0 83.004 33.145 C 83.812 27.755 80.52 24.174 74.436 22.703 A 24.534 24.534 0 0 0 72.182 22.274 L 70 30.637 A 9.625 9.625 0 0 1 71.499 30.98 C 73.743 31.707 74.435 33.192 73.816 35.672 A 10.206 10.206 0 0 1 73.727 36.001 L 68.455 54.637 A 73.072 73.072 0 0 0 67.42 58.735 C 64.23 73.241 68.579 78.94 80.524 79.651 A 46.357 46.357 0 0 0 83.273 79.728 A 20.497 20.497 0 0 0 88.484 79.128 C 93.147 77.912 96.827 74.707 101.364 68.274 Z M 456.727 79.728 C 469.727 79.728 480.182 67.183 483.909 50.728 C 488.818 29.274 484.909 21.001 468.364 21.001 C 455.364 21.001 444.364 33.546 441.182 50.001 C 436.909 71.455 440.182 79.728 456.727 79.728 Z M 202.455 41.455 L 197.273 64.91 A 9.26 9.26 0 0 1 194.454 67.81 C 191.96 69.534 188.312 70.796 184.03 71.214 A 32.137 32.137 0 0 1 180.909 71.364 A 11.344 11.344 0 0 1 177.338 70.87 C 172.857 69.379 171.829 64.367 173.819 53.895 A 104.12 104.12 0 0 1 174.455 50.819 C 176.187 42.885 179.773 36.599 184.412 32.933 A 15.622 15.622 0 0 1 194.182 29.364 C 199.874 29.364 203.204 33.92 202.547 40.674 A 19.026 19.026 0 0 1 202.455 41.455 Z M 453.66 70.969 A 18.13 18.13 0 0 0 457.727 71.364 A 9.893 9.893 0 0 0 458.782 71.308 C 463.515 70.8 468.248 66.935 471.609 61.188 A 35.139 35.139 0 0 0 475.727 50.001 A 123.314 123.314 0 0 0 476.251 47.056 C 478.102 35.809 476.95 31.013 471.282 29.734 A 17.957 17.957 0 0 0 467.364 29.364 A 9.707 9.707 0 0 0 466.952 29.373 C 462.023 29.583 457.238 33.528 453.732 39.527 A 40.622 40.622 0 0 0 449.364 50.728 C 446.386 64.015 447.512 69.541 453.66 70.969 Z M 285.227 69.626 A 9.024 9.024 0 0 0 290.727 71.364 A 7.059 7.059 0 0 0 291.458 71.326 C 294.824 70.976 298.374 68.256 301.335 64.281 A 35.911 35.911 0 0 0 306.273 54.91 C 308.636 42.91 310.727 33.728 310.818 31.819 C 310.636 29.91 309.091 29.364 303.727 29.364 A 7.343 7.343 0 0 0 303.399 29.372 C 295.469 29.727 284.774 42.788 282.086 55.848 A 29.699 29.699 0 0 0 281.455 61.455 C 281.564 65.071 282.961 67.927 285.227 69.626 Z M 263.909 46.274 L 265.636 37.91 L 228.364 37.91 L 226.636 46.274 L 263.909 46.274 Z M 373 46.274 L 374.727 37.91 L 337.455 37.91 L 335.727 46.274 L 373 46.274 Z M 83.455 12.91 C 88.182 12.91 90 11.546 90.909 7.092 A 20.585 20.585 0 0 0 91.124 5.984 C 91.855 1.509 90.238 0.016 84.987 0.001 A 28.123 28.123 0 0 0 84.909 0.001 A 16.171 16.171 0 0 0 82.501 0.156 C 79.492 0.613 78.148 2.147 77.401 5.639 A 19.88 19.88 0 0 0 77.364 5.819 C 76.273 11.183 77.727 12.91 83.455 12.91 Z\",\n    vectorEffect: \"non-scaling-stroke\"\n  }))));\n}\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgFindACowin);\nexport default __webpack_public_path__ + \"static/media/find-a-cowin.1ba23df8.svg\";\nexport { ForwardRef as ReactComponent };","import {createSlice} from \"@reduxjs/toolkit\";\n\n\nconst settingsMap = {\n    calendarByDistrictView: \"SETTINGS_CALENDARBYDIST_VIEW\",\n    calendarByDistrictAutoRefresh: \"SETTINGS_CALENDARBYDIST_AR\",\n    calendarByDistrictAutoRefreshInterval: \"SETTINGS_CALENDARBYDIST_AR_INT\"\n}\n\nconst defaultSettings = {\n    calendarByDistrictView: \"table\",\n    calendarByDistrictAutoRefresh: false,\n    calendarByDistrictAutoRefreshInterval: null\n\n}\n\nconst initialState = {\n    calendarByDistrictView: localStorage.getItem(settingsMap.calendarByDistrictView) || defaultSettings.calendarByDistrictView,\n    calendarByDistrictAutoRefresh: localStorage.getItem(settingsMap.calendarByDistrictAutoRefresh) === \"true\"\n        || defaultSettings.calendarByDistrictAutoRefresh,\n    calendarByDistrictAutoRefreshInterval: parseInt(localStorage.getItem(settingsMap.calendarByDistrictAutoRefreshInterval))\n        || defaultSettings.calendarByDistrictAutoRefreshInterval\n}\n\n\nexport const settingsSlice = createSlice({\n    name: 'settings',\n    initialState,\n    reducers: {\n        resetSettings: (state, action) => {\n            localStorage.setItem('SETTINGS', 'true');\n            localStorage.setItem(settingsMap.calendarByDistrictView, defaultSettings.calendarByDistrictView);\n            localStorage.setItem(settingsMap.calendarByDistrictAutoRefresh,\n                defaultSettings.calendarByDistrictAutoRefresh);\n            localStorage.setItem(settingsMap.calendarByDistrictAutoRefreshInterval,\n                defaultSettings.calendarByDistrictAutoRefreshInterval)\n            state.calendarByDistrictView = defaultSettings.calendarByDistrictView;\n            state.calendarByDistrictAutoRefresh = defaultSettings.calendarByDistrictAutoRefresh;\n            state.calendarByDistrictAutoRefreshInterval = defaultSettings.calendarByDistrictAutoRefreshInterval;\n        },\n        setCalendarByDistrictView: (state, action) => {\n            const { viewName } = action.payload;\n            state.calendarByDistrictView = viewName;\n            localStorage.setItem(settingsMap.calendarByDistrictView, viewName);\n        },\n        setCalendarByDistrictAutoRefreshInterval: (state, action) => {\n            const { interval } = action.payload;\n            if (interval === null) {\n                state.calendarByDistrictAutoRefresh = false;\n                state.calendarByDistrictAutoRefreshInterval = null;\n                localStorage.setItem('SETTINGS_CALENDARBYDIST_AR', 'false')\n                localStorage.removeItem('SETTINGS_CALENDARBYDIST_AR_INT')\n            }\n            else {\n                state.calendarByDistrictAutoRefresh = true;\n                state.calendarByDistrictAutoRefreshInterval = interval;\n                localStorage.setItem('SETTINGS_CALENDARBYDIST_AR', 'true')\n                localStorage.setItem('SETTINGS_CALENDARBYDIST_AR_INT', interval.toString())\n            }\n        }\n    }\n});\n\nexport const {\n    resetSettings,\n    setCalendarByDistrictView,\n    setCalendarByDistrictAutoRefreshInterval\n} = settingsSlice.actions;\n\nexport const selectSettings = (state) => state.settings;\n\nexport default settingsSlice.reducer;\n","import { filter, some, clone } from \"lodash/fp\";\n\nexport function isFree(centers) {\n    return filter(center => center.fee_type === \"Free\", centers);\n}\n\nexport function isPaid(centers) {\n    return filter(center => center.fee_type === \"Paid\", centers);\n}\n\nexport function byVaccine(centers, vaccines) {\n    let filteredCenters = filter(center => {\n        return some(session => vaccines.includes(session.vaccine), center.sessions);\n    }, centers);\n    let newCenters = []\n    filteredCenters.forEach(center => {\n        let newCenter = clone(center)\n        newCenter.sessions = filter(session => vaccines.includes(session.vaccine), center.sessions);\n        newCenters.push(newCenter)\n    })\n    return newCenters;\n}\n\nexport function byKeyword(centers, keywords) {\n    return filter(center => {\n        const target = [\n            center.center_id.toString(),\n            center.name,\n            center.address,\n            center.block_name\n        ].join(' ').toLowerCase();\n        return some(el => target.indexOf(el.toLowerCase()) >= 0, keywords)\n    }, centers);\n}\n\n\nexport function byAge(centers, ages) {\n    const {minAge, maxAge} = ages\n    if (!minAge && !maxAge) {\n        return centers;\n    }\n    let filteredCenters = filter(center => {\n        return some(session => {\n            if (minAge && maxAge) {\n                return session.min_age_limit >= minAge && session.max_age_limit <= maxAge;\n            }\n            else if (minAge && !maxAge) {\n                return session.min_age_limit >= minAge;\n            }\n            else if (!minAge && maxAge) {\n                return session.max_age_limit <= maxAge;\n            }\n        }, center.sessions);\n    }, centers);\n    let newCenters = []\n    filteredCenters.forEach(center => {\n        let newCenter = clone(center)\n        newCenter.sessions = filter(session => {\n            if (minAge && maxAge) {\n                return session.min_age_limit >= minAge && session.max_age_limit <= maxAge;\n            }\n            else if (minAge && !maxAge) {\n                return session.min_age_limit >= minAge;\n            }\n            else if (!minAge && maxAge) {\n                return session.max_age_limit >= minAge\n            }\n        }, center.sessions);\n        newCenters.push(newCenter)\n    })\n    return newCenters;\n}\n\n/* \nA terribly specific function for helping the byAgeCategory filter function.\nWorks for now, since there are only 3 age categories, hence only 6+1 combinaions are possible.\nTakes an array of age values, array containing \"min_age\" and \"max_age\" and then uses\nthe join array to determine whether to AND (join: true) or to OR (join: false) the conditions.\n*/\nfunction combineMultipleAgeConditions(session, ages, filterFields, joins) {\n    let val1 = joins[0] ? \n            session[filterFields[0]] === ages[0] && session[filterFields[1]] === ages[1] : \n            (session[filterFields[0]] === ages[0] || session[filterFields[1]] === ages[1]);\n    if (ages.length === 2) {\n        return val1;\n    }\n    // Currently, three conditional checks are only required when 18+ and 45+ is checked\n    // to filter out the 18-44 slots. Hence, note that the statements are using the unequal sign.\n    if (ages.length === 3) {\n        return joins[1] ?\n            val1 && session[filterFields[2]] !== ages[2] :\n            val1 || session[filterFields[2]] !== ages[2]\n    }\n    return false;\n}\n\n/* \nFilters age by category, the if-else conditions determine what minimum and maximum values\nto use for filtering depending on the categories selected (values array). \nSince multiple, disconnected ranges like 18+ and 45+ can be checked by the user, a helper \nfunction which can take multiple min. or max. values and other parameters is used.\n*/\nexport function byAgeCategory(centers, categories) {\n    const {eighteenAbove: fifteenAbove, eighteenFortyFour, fortyFiveAbove} = categories;\n    let values, filterFields, joins;\n    let min = \"min_age_limit\";\n    let max = \"max_age_limit\";\n    if (fifteenAbove === eighteenFortyFour && fifteenAbove === fortyFiveAbove) {\n        return centers;\n    }\n    if (fifteenAbove && eighteenFortyFour) {\n        values = [15, 44];\n        filterFields = [min, max];\n        joins = [false];\n    }\n    else if (fifteenAbove && fortyFiveAbove) {\n        // filter centers with:\n        // (min = 18 OR min = 45) AND max != 44\n        // a false in joins means OR, a true means AND\n        // filter centers with: \n        // (filterFields[0] = values[0] {joins[0]} filterFields[1] = values[1]) AND filterFields[2] != values[2]\n        values = [15, 45, 44];\n        filterFields = [min, min, max];\n        joins = [false, true];\n    }\n    else if (eighteenFortyFour && fortyFiveAbove) {\n        values = [45, 44];\n        filterFields = [min, max];\n        joins = [false];\n    }\n    else if (fifteenAbove) {\n        values = [15, undefined];\n        filterFields = [min, max];\n        joins = [true];\n    }\n    else if (eighteenFortyFour) {\n        values = [18, 44];\n        filterFields = [min, max];\n        joins = [true];\n    }\n    else if (fortyFiveAbove) {\n        values = [45, undefined];\n        filterFields = [min, max];\n        joins = [true];\n    }\n    else {\n        return centers;\n    }\n\n    let filteredCenters = filter(center => {\n        return some(session => {\n            return combineMultipleAgeConditions(session, values, filterFields, joins);\n        }, center.sessions);\n    }, centers);\n    let newCenters = []\n    filteredCenters.forEach(center => {\n        let newCenter = clone(center)\n        newCenter.sessions = filter(session => {\n            return combineMultipleAgeConditions(session, values, filterFields, joins);\n        }, center.sessions);\n        newCenters.push(newCenter);\n    })\n    return newCenters;\n}","import { clone, orderBy, sumBy } from \"lodash/fp\"\n\nexport function byCenterTotalDoses(centers, sortOrder) {\n    return orderBy(center => sumBy(session => session.available_capacity, center.sessions), sortOrder, centers);\n}\n\nexport function bySessionDoses(centers, sortOrder) {\n    let nextCenters = [];\n    centers.forEach(center => {\n        let nextCenter = clone(center)\n        nextCenter.sessions = orderBy(\n            ['available_capacity_dose1', 'available_capacity_dose2'], \n            sortOrder, \n            center.sessions\n        )\n        nextCenters.push(nextCenter);\n    });\n    return nextCenters;\n}\n","import {createAsyncThunk, createSelector, createSlice} from \"@reduxjs/toolkit\";\nimport axios from \"axios\"\nimport { flow, partialRight, pickBy } from \"lodash/fp\";\nimport {\n\tbyAge as filterByAge,\n    byKeyword as filterByKeyword, \n    byVaccine as filterByVaccine, \n    isFree as filterIsFree, \n    isPaid as filterIsPaid \n} from \"../finder/filters/filters\";\nimport { \n\tbyCenterTotalDoses as sortByCenterTotalDoses \n} from \"../finder/sorting/sorting\";\n\nconst getCalendarByStarredCenters = () => {\n    let status = {}\n    const centers = JSON.parse(localStorage.getItem(\"starred\"));\n    if (centers) {\n        for (let center of centers) {\n            status[center] = 'idle'\n        }\n    }\n    return status;\n}\n\nconst initialState = {\n    states: [],\n    districts: [],\n    selected: {\n        stateEnt: {\n            stateName: \"Select a State\",\n            stateId: null\n        },\n        districtEnt: {\n            districtName: \"Select a District\",\n            districtId: null\n        },\n    },\n    calendarByDistrict: {\n        centers: []\n    },\n    calendarByCenter: {},\n    vaccinationReports: {},\n    publicReports: {},\n    status: {\n        states: 'idle',\n        districts: 'idle',\n        calendarByDistrict: 'idle',\n        calendarByCenter: getCalendarByStarredCenters(),\n        vaccinationReports: 'idle',\n        publicReports: 'idle'\n    },\n    error: {\n        states: null,\n        districts: null,\n        calendarByDistrict: null,\n        vaccinationReports: null,\n        publicReports: null\n    },\n    filters: {\n        keywords: [],\n        feeType: {\n            \"Free\": true,\n            \"Paid\": true\n        },\n        // vaccines: {\n        //     \"COVAXIN\": false,\n        //     \"COVISHIELD\": true,\n        //     \"SPUTNIK V\": false\n        // },\n        vaccines: {\n            covaxin: {\n                name: \"COVAXIN\",\n                checked: false\n            },\n            covovax: {\n                name: \"COVOVAX\",\n                checked: false\n            },\n            corbevax: {\n                name: \"CORBEVAX\",\n                checked: false\n            },\n            covishield: {\n                name: \"COVISHIELD\",\n                checked: false\n            },\n            sputnik: {\n                name: \"SPUTNIK V\",\n                checked: false\n            }\n        },\n        ages: {\n            minAge: 12,\n            maxAge: \"\"\n\t\t\t// fifteenAbove: true,\n\t\t\t// eighteenFortyFour: true,\n\t\t\t// fortyFiveAbove: true\n        }\n    },\n    sort: {\n        session: {\n            doses: ['desc', 'desc'],\n        },\n        center: {\n\t\t\ttotalDoses: 'desc'\n        }\n    }\n}\n\nexport const fetchCalendarByDistrict = createAsyncThunk('cowin/calendarByDistrict',\n    async ({districtId, date}) => {\n    const response = await axios.get(\n        `https://cdn-api.co-vin.in/api/v2/appointment/sessions/public/calendarByDistrict?district_id=\n            ${districtId}&date=${date}`);\n    return response.data;\n});\n\nexport const fetchCalendarByCenter = createAsyncThunk('cowin/calendarByCenter',\nasync ({centerId, date}) => {\n    const response = await axios.get(\n        `https://cdn-api.co-vin.in/api/v2/appointment/sessions/public/calendarByCenter?center_id=\n    ${centerId}&date=${date}`);\n    return response.data[\"centers\"];\n});\n\nexport const fetchStates = createAsyncThunk('cowin/fetchStates',\n    async () => {\n    const response = await axios.get(\n        `https://cdn-api.co-vin.in/api/v2/admin/location/states`);\n    return response.data;\n});\n\nexport const fetchDistricts = createAsyncThunk('cowin/fetchDistricts',\n    async ({stateId}) => {\n    const response = await axios.get(\n        `https://cdn-api.co-vin.in/api/v2/admin/location/districts/${stateId}`);\n    return response.data;\n});\n\nexport const fetchVaccinationReports = createAsyncThunk('cowin/fetchVaccinationReports',\n    async ({stateId, districtId, date}) => {\n        const response = await axios.get(`https://api.cowin.gov.in/api/v1/reports/v2/getVacPublicReports?\n        state_id=${stateId}&district_id=${districtId}&date=${date}`);\n        return response.data\n    })\n\nexport const fetchPublicReports = createAsyncThunk('cowin/fetchPublicReports',\n    async ({stateId, districtId, date}) => {\n        const response = await axios.get(`https://api.cowin.gov.in/api/v1/reports/v2/getPublicReports?\n        state_id=${stateId}&district_id=${districtId}&date=${date}`);\n        return response.data\n    })\n\nexport const cowinSlice = createSlice({\n    name: 'cowin',\n    initialState,\n    reducers: {\n        resetDistrictStore: (state) => {\n            state.districts = [];\n        },\n        resetCalendarByDistrictStore: (state) => {\n            state.calendarByDistrict = { centers: [] };\n        },\n        setSelectedState: (state, action) => {\n            const { stateName } = action.payload;\n            state.selected.stateEnt.stateName = stateName;\n            state.status.calendarByDistrict = 'idle';\n            if (action.payload.stateId) {\n                state.selected.stateEnt.stateId = action.payload.stateId;\n            }\n            else {\n                state.selected.stateEnt.stateId = null;\n            }\n        },\n        setCalendarByCenterStatus: (state, action) => {\n            const { centerId, fetchStatus } = action.payload;\n            state.status.calendarByCenter[centerId] = fetchStatus;\n        },\n        setSelectedDistrict: (state, action) => {\n            const { districtName } = action.payload;\n            state.selected.districtEnt.districtName = districtName;\n            if (action.payload.districtId) {\n                state.selected.districtEnt.districtId = action.payload.districtId;\n            }\n            else {\n                state.selected.districtEnt.districtId = null\n            }\n        },\n        setFeeFilter: (state, action) => {\n            const { feeType, typeSelected } = action.payload;\n            state.filters.feeType[feeType] = typeSelected;\n        },\n        setKeywordFilter: (state, action) => {\n            state.filters.keywords = action.payload;\n        },\n        setVaccineFilter: (state, action) => {\n            const { vaccine, value } = action.payload;\n            switch (vaccine) {\n                case \"COVAXIN\":\n                    state.filters.vaccines.covaxin.checked = value;\n                    break;\n                case \"COVOVAX\":\n                    state.filters.vaccines.covovax.checked = value;\n                    break;\n                case \"CORBEVAX\":\n                    state.filters.vaccines.corbevax.checked = value;\n                    break;\n                case \"COVISHIELD\":\n                    state.filters.vaccines.covishield.checked = value;\n                    break;\n                case \"SPUTNIK V\":\n                    state.filters.vaccines.sputnik.checked = value;\n                    break;\n                default:\n                    break;\n            }\n        },\n\t\tsetAgeFilter: (state, action) => {\n\t\t\tconst { minAge, maxAge } = action.payload;\n\t\t\tstate.filters.ages.minAge = minAge;\n\t\t\tstate.filters.ages.maxAge = maxAge;\n\t\t}\n\t\t// setAgeFilter: (state, action) => {\n\t\t// \tconst { age, value } = action.payload;\n\t\t// \tswitch (age) {\n\t\t// \t\tcase \"age-15-above\":\n\t\t// \t\t\tstate.filters.ages.fifteenAbove = value;\n\t\t// \t\t\tbreak;\n\t\t// \t\tcase \"age-18-44\":\n\t\t// \t\t\tstate.filters.ages.eighteenFortyFour = value;\n\t\t// \t\t\tbreak;\n\t\t// \t\tcase \"age-45-above\":\n\t\t// \t\t\tstate.filters.ages.fortyFiveAbove = value;\n\t\t// \t\t\tbreak;\n\t\t// \t\tdefault:\n\t\t// \t\t\tbreak;\n\t\t// \t}\n\t\t// }\n    },\n    extraReducers: {\n        [fetchCalendarByDistrict.pending]: (state) => {\n            state.status.calendarByDistrict = 'loading';\n        },\n        [fetchCalendarByDistrict.fulfilled]: (state, action) => {\n            state.status.calendarByDistrict = 'succeeded';\n            state.calendarByDistrict = action.payload;\n        },\n        [fetchCalendarByDistrict.rejected]: (state, action) => {\n            state.status.calendarByDistrict = 'failed';\n            state.error.calendarByDistrict = action.error.message;\n        },\n        [fetchCalendarByCenter.pending]: (state, action) => {\n            let center = action.meta.arg.centerId;\n            state.status.calendarByCenter[center] = 'idle'\n        },\n        [fetchCalendarByCenter.fulfilled]: (state, action) => {\n            let center = action.meta.arg.centerId;\n            state.status.calendarByCenter[center] = 'succeeded';\n            state.calendarByCenter[center] = action.payload;\n        },\n        [fetchCalendarByCenter.rejected]: (state, action) => {\n            // let center = action.error.id;\n            let center = action.meta.arg.centerId;\n            state.status.calendarByCenter[center] = 'failed';\n            state.error.calendarByCenter[center] = action.error.message;\n        },\n        [fetchStates.pending]: (state) => {\n            state.status.states = 'loading';\n        },\n        [fetchStates.fulfilled]: (state, action) => {\n            state.status.states = 'succeeded';\n            //Here we select the slates key from the response\n            // Response: {\n            //  states: []\n            // }\n            state.states = action.payload.states;\n        },\n        [fetchStates.rejected]: (state, action) => {\n            state.status.states = 'failed';\n            state.error.states = action.error.message;\n        },\n        [fetchDistricts.pending]: (state) => {\n            state.status.districts = 'loading';\n        },\n        [fetchDistricts.fulfilled]: (state, action) => {\n            state.status.districts = 'succeeded';\n            state.districts = action.payload.districts;\n        },\n        [fetchDistricts.rejected]: (state, action) => {\n            state.status.districts = 'failed';\n            state.error.districts = action.error.message;\n        },\n        [fetchVaccinationReports.fulfilled]: (state, action) => {\n            state.status.vaccinationReports = 'succeeded';\n            state.error.vaccinationReports = null;\n            state.vaccinationReports = action.payload;\n        },\n        [fetchVaccinationReports.rejected]: (state, action) => {\n            state.status.vaccinationReports = 'failed';\n            state.error.vaccinationReports = action.error.message;\n        },\n        [fetchPublicReports.fulfilled]: (state, action) => {\n            state.status.publicReports = 'succeeded';\n            state.error.publicReports = null;\n            state.publicReports = action.payload;\n        },\n        [fetchPublicReports.rejected]: (state, action) => {\n            state.status.publicReports = 'failed';\n            state.error.publicReports = action.error.message;\n        }\n    },\n});\n\n\n\nexport const { resetDistrictStore,\n    resetCalendarByDistrictStore,\n    setKeywordFilter,\n    setFeeFilter,\n    setVaccineFilter,\n\tsetAgeFilter,\n    setSelectedState,\n    setSelectedDistrict,\n    setCalendarByCenterStatus\n} = cowinSlice.actions;\n\nexport const selectCalendarByDistrict = (state) => state.cowin.calendarByDistrict.centers;\nexport const selectCalendarByCenter = (state) => state.cowin.calendarByCenter;\n\nexport const selectKeywordFilter = (state) => state.cowin.filters.keywords;\nexport const selectFeeFilters = (state) => state.cowin.filters.feeType;\nexport const selectVaccineFilter = (state) => state.cowin.filters.vaccines;\nexport const selectAgeFilter = (state) => state.cowin.filters.ages;\n\nexport const selectAllStates = (state) => state.cowin.states;\nexport const selectAllDistricts = (state) => state.cowin.districts;\nexport const selectSelectedState = (state) => state.cowin.selected.stateEnt;\nexport const selectSelectedDistrict = (state) => state.cowin.selected.districtEnt;\n\n// export const selectVaxReportsLastThirtyDays = (state) => state.cowin.vaccinationReports.last30DaysVaccination;\n// export const selectPublicReports = (state) => state.cowin.publicReports;\n// export const selectPublicReportsBeneficiaries = (state) => state.cowin.publicReports.getBeneficiariesGroupBy;\n\nexport const selectFilteredData = createSelector(\n    selectCalendarByDistrict,\n    selectFeeFilters,\n    selectKeywordFilter,\n    selectVaccineFilter,\n    selectAgeFilter,\n    (state) => state.cowin.sort,\n    (centers, feeFilters, keywords, vaccines, ages, sort) => {\n        let transformations = []\n        if (feeFilters[\"Free\"] !== feeFilters[\"Paid\"]) {\n            if (feeFilters[\"Free\"]) {\n                transformations.push(filterIsFree);\n            }\n            else if (feeFilters[\"Paid\"]) {\n                transformations.push(filterIsPaid);\n            }\n        }\n        // if (vaccines) {\n        //     let selectedVaccines = Object.keys(pickBy(vaccine => vaccine, vaccines));\n        //     console.log(selectedVaccines)\n        //     transformations.push(partialRight(filterByVaccine, [selectedVaccines]));\n        // }\n        if (vaccines) {\n            let selectedVaccines = pickBy(vaccine => vaccine.checked, vaccines);\n            let nextVaccines = [];\n            Object.values(selectedVaccines).forEach(vaccine => nextVaccines.push(vaccine.name));\n            if (nextVaccines.length > 0) {\n                transformations.push(partialRight(filterByVaccine, [nextVaccines]));\n            }\n        }\n\t\tif (ages) {\n\t\t\ttransformations.push(partialRight(filterByAge, [ages]));\n\t\t}\n        if (keywords.length > 0) {\n            transformations.push(partialRight(filterByKeyword, [keywords]));\n        }\n\t\t// TODO: vaccine price sorting\n        // Implementing a drag-drop interface with the ability to rank the sorts would be amazing.\n\t\ttransformations.push(partialRight(sortByCenterTotalDoses, [[sort.center.totalDoses]]));\n\t\t// Sort slots within a center by dose count\n        // transformations.push(partialRight(sortByDosesWithinCenter, [sort.session.doses]));\n        // console.log(filters)\n        return flow(transformations)(centers);\n    }\n)\n\nexport default cowinSlice.reducer;\n","import {Icon, Intent, Tag} from \"@blueprintjs/core\";\nimport React from \"react\";\n\n/*\n* Session uses the Blueprintjs {@link https://blueprintjs.com/docs/#core/components/tag Tag} component to render a\n* session's details\n*\n* */\n\nfunction SessionTags(props) {\n    const { sessions } = props;\n\n    return (\n        <>\n            {sessions && sessions.map((session, id) => (\n                <Tag key={id} className=\"session\" intent={Intent.PRIMARY} minimal={true}>\n                    <Icon icon={\"calendar\"} />\n                    <span className=\"session-info\">{session.date}</span>\n                    <span className=\"session-info\">{session.vaccine}</span>\n                    <span className=\"session-info\">(D1: {session.available_capacity_dose1}</span>\n                    <span className=\"session-info\">D2: {session.available_capacity_dose2})</span>\n                    {session.max_age_limit &&\n                        <span className=\"session-info\">({session.min_age_limit} - {session.max_age_limit})</span>\n                    }\n                    {!session.max_age_limit &&\n                        <span className=\"session-info\">({session.min_age_limit})</span>\n                    }\n                </Tag>\n            ))}\n        </>\n    )\n}\n\nfunction SessionTable(props) {\n    const { sessions } = props;\n\n    return (\n        <table className=\"bp3-html-table bp3-html-table-bordered bp3-html-table-condensed bp3-interactive sessions-table\">\n            <thead>\n            <tr>\n                <th>Date</th>\n                <th>Vaccine</th>\n                <th>Dose 1</th>\n                <th>Dose 2</th>\n                <th>Min. Age</th>\n                <th>Max. Age</th>\n            </tr>\n            </thead>\n            <tbody>\n            {sessions && sessions.map((session, id) => (\n                <tr key={id}>\n                    <td>\n                        {session.date}\n                    </td>\n                    <td>\n                        {session.vaccine}\n                    </td>\n                    <td>\n                        {session.available_capacity_dose1}\n                    </td>\n                    <td>\n                        {session.available_capacity_dose2}\n                    </td>\n                    <td>\n                        {session.min_age_limit || \"-\"}\n                    </td>\n                    <td>\n                        {session.max_age_limit || \"-\"}\n                    </td>\n                </tr>\n            ))}\n            </tbody>\n        </table>\n    )\n}\n\nexport { SessionTable, SessionTags };","import {createSlice} from \"@reduxjs/toolkit\";\n\nconst initialState = {\n    centers: JSON.parse(localStorage.getItem(\"starred\")) || []\n}\n\n\nexport const starredCentersSlice = createSlice({\n    name: 'starredCenters',\n    initialState,\n    reducers: {\n        resetStarredCenters: (state, _action) => {\n            localStorage.setItem(\"starred\", JSON.stringify([]));\n            state.centers = []\n        },\n        setStarredCenters: (state, action) => {\n            const { centers } = action.payload;\n            localStorage.setItem(\"starred\", JSON.stringify(centers));\n            state.centers = centers;\n        }\n    }\n});\n\nexport const {\n    resetStarredCenters,\n    setStarredCenters\n} = starredCentersSlice.actions;\n\nexport const selectStarredCenters = (state) => state.starredCenters.centers;\n\nexport default starredCentersSlice.reducer;\n","import {Button, H5, Intent, Tag} from \"@blueprintjs/core\";\nimport React from \"react\";\nimport {SessionTable, SessionTags} from \"./Session\";\nimport {useDispatch, useSelector} from \"react-redux\";\nimport {selectStarredCenters, setStarredCenters} from \"../starred-centers/starredCentersSlice\";\nimport {setCalendarByCenterStatus} from \"../cowin/cowinSlice\";\nimport {AppToaster} from \"../../App\";\n\n/*\n* Defines the Blueprintjs Intent color to use with a particular fee type\n*\n* */\nconst feeType = {\n    \"Paid\": Intent.WARNING,\n    \"Free\": Intent.SUCCESS\n}\n\n/*\n* CenterCard component renders a center and its Cowin using the Session component. Currently, every session\n* is rendered a Tag, but it's not very good looking.\n*\n* */\nfunction CenterCard(props) {\n    const {center, loading = false, showStarButton = true} = props;\n    // maybe lift viewType and starred to finder itself\n    const viewType = useSelector((state => state.settings.calendarByDistrictView));\n    const dispatch = useDispatch();\n    const starred = useSelector(selectStarredCenters);\n\n    if (loading) {\n        return (\n            <div key={center} className=\"center bp3-elevation-1\">\n                <div className=\"center-info-container\">\n                    <span className=\"center-name bp3-skeleton\">Loading</span>\n                    <Tag className=\"center-fee-type bp3-skeleton\" intent={Intent.PRIMARY}>\n                        Loading\n                    </Tag>\n                    <div className=\"vaccine-fee-tags\">\n                        <Tag key={1} className=\"fee-type bp3-skeleton\">Loading</Tag>\n                        <Tag key={1} className=\"fee-type bp3-skeleton\">Loading</Tag>\n                        <Tag key={1} className=\"fee-type bp3-skeleton\">Loading</Tag>\n                    </div>\n                    <Button className={\"bp3-skeleton\"} icon={\"star\"}/>\n                </div>\n                <div className=\"center-info-container\">\n                    <span className=\"center-info bp3-skeleton\">Loading</span>\n                    <span className=\"center-info block-name bp3-skeleton\">Loading</span>\n                </div>\n                <div className=\"sessions-skeleton bp3-skeleton\">\n                    Loading\n                </div>\n            </div>\n        )\n    }\n\n    let content;\n    if (viewType === \"table\") {\n        content = <SessionTable sessions={center.sessions}/>\n    } else if (viewType === \"tags\") {\n        content = <SessionTags sessions={center.sessions}/>\n    }\n\n    const starCenter = (event, centerId) => {\n        dispatch(setCalendarByCenterStatus({centerId: centerId, fetchStatus: \"idle\"}))\n        dispatch(setStarredCenters({centers: [...starred, centerId]}));\n        let starredNavLink = {\n            href: `${process.env.PUBLIC_URL}/starred`,\n            text: \"See here\"\n        };\n        AppToaster.show({\n            message: \"Center starred!\",\n            intent: Intent.SUCCESS,\n            icon: \"star\",\n            action: starredNavLink\n        });\n    }\n\n    const unstarCenter = (event, centerId) => {\n        const nextStarredCenters = starred.filter((val) => val !== centerId);\n        dispatch(setStarredCenters({centers: nextStarredCenters}));\n    }\n\n    const starButton = (centerId) => {\n        if (starred.includes(centerId)) {\n            return <Button\n                className=\"center-star-button\"\n                icon={\"star\"} text={\"Remove\"}\n                onClick={(event) => unstarCenter(event, center.center_id)}\n                small={true}\n            />\n        }\n        return <Button\n            className=\"center-star-button\"\n            icon={\"star-empty\"} text={\"Star\"}\n            onClick={(event) => starCenter(event, center.center_id)}\n            small={true}\n        />\n    }\n\n    return (\n        <div key={center.center_id} className=\"center bp3-elevation-1\">\n            <div className=\"center-info-container\">\n                <H5>{center.name}</H5>\n            </div>\n            <div className=\"center-info-container center-actions\">\n                <Tag className=\"center-fee-type\" intent={feeType[center.fee_type]}>\n                    {center.fee_type}\n                </Tag>\n                {center.vaccine_fees && center.vaccine_fees.map((vaccine_fee, id) => (\n                    <Tag key={id} className=\"fee-type\">\n                        {vaccine_fee.vaccine}: ₹ {vaccine_fee.fee}\n                    </Tag>\n                ))}\n                {\n                    showStarButton && starButton(center.center_id)\n                }\n            </div>\n            <div className=\"center-info-container\">\n                <span className=\"center-info\">{center.address}</span>\n                {center.block_name !== \"Not Applicable\" &&\n                    <span className=\"center-info block-name\">[Block: {center.block_name}]</span>\n                }\n            </div>\n            <div className=\"sessions\">\n                {content}\n            </div>\n        </div>\n    )\n}\n\nexport {CenterCard};","import React from \"react\";\nimport {Button, MenuItem} from \"@blueprintjs/core\";\nimport {Select} from \"@blueprintjs/select\";\n\n/*\n* Simple filtering function, extracted here so that it doesn't have to repeated in both\n* State and District Selectors\n*\n* */\nconst filterList = (query, title, _index, exactMatch) => {\n    const normalizedTitle = title.toLowerCase();\n    const normalizedQuery = query.toLowerCase();\n\n    if (exactMatch) {\n        return normalizedTitle === normalizedQuery;\n    } else {\n        return normalizedTitle.indexOf(normalizedQuery) >= 0;\n    }\n}\n\n/*\n* StateSelector uses the {@link https://blueprintjs.com/docs/#select Blueprintjs Select} component,\n* provides a list of states to filter and choose from.\n* TODO Consider merging both State and District selectors and managing\n*  differences through props.\n*\n* */\nconst StateSelector = React.memo((props) => {\n    const {setState, selectedState, states} = props;\n\n    const renderInputValue = (state) => state.state_name;\n\n    // Handle State selector value change\n    const handleValueChange = (state, _event) => {\n        setState(state);\n    }\n\n    // Render a Blueprintjs Menu Item for every state\n    const renderItem = (state, {handleClick, _modifiers, _query}) => {\n        return (\n            <MenuItem key={state.state_id} text={state.state_name} onClick={handleClick}/>\n        );\n    }\n\n    // Called by the {@link https://blueprintjs.com/docs/#select Blueprintjs Select} component whenever\n    // the query has a new input keyword. Select will provide query,\n    // the State item {state_name: string, state_id: string} the index and exactMatch.\n    const filterStates = (query, state, index, exactMatch) => {\n        return filterList(query, state.state_name, index, exactMatch)\n    }\n\n    return (\n        <div className=\"slot-toolbar-item selector\">\n            <Select\n                fill={true}\n                items={states}\n                popoverProps={{popoverClassName: \"selector-popover\", minimal: true}}\n                inputValueRenderer={renderInputValue}\n                itemRenderer={renderItem}\n                onItemSelect={handleValueChange}\n                itemPredicate={filterStates}\n                noResults={<MenuItem disabled={true} text=\"No results.\"/>}\n            >\n                <Button fill={true} text={selectedState.stateName} rightIcon=\"caret-down\"/>\n            </Select>\n        </div>\n    )\n});\n\n\n/*\n* DistrictSelector uses the {@link https://blueprintjs.com/docs/#select Blueprintjs Select} component,\n* provides a list of districts to filter and choose from.\n*\n* */\nconst DistrictSelector = React.memo((props) => {\n    const {setDistrict, selectedDistrict, districts} = props;\n    // const districts = useSelector(selectAllDistricts);\n\n    const renderDistrictInputValue = (district) => district.district_name;\n\n    const renderDistrictItem = (district, {handleClick, _modifiers, _query}) => {\n        return (\n            <MenuItem key={district.district_id} text={district.district_name} onClick={handleClick}/>\n        )\n    }\n\n    const districtSelected = (district, _event) => {\n        setDistrict(district);\n    }\n\n    // Called by the Blueprintjs Select component whenever the query has a new input keyword.\n    // Select will provide query, the State item {district_name: string, district_id: string},\n    // the index and exactMatch.\n    const filterDistricts = (query, district, index, exactMatch) => {\n        return filterList(query, district.district_name, index, exactMatch);\n    }\n\n    return (\n        <div className=\"slot-toolbar-item selector\">\n            <Select\n                fill={true}\n                items={districts}\n                popoverProps={{popoverClassName: \"selector-popover\", minimal: true}}\n                inputValueRenderer={renderDistrictInputValue}\n                itemRenderer={renderDistrictItem}\n                onItemSelect={districtSelected}\n                itemPredicate={filterDistricts}\n                noResults={<MenuItem disabled={true} text=\"No results.\"/>}\n            >\n                <Button fill={true} text={selectedDistrict.districtName} rightIcon=\"caret-down\"/>\n            </Select>\n        </div>\n    )\n});\n\nexport {StateSelector, DistrictSelector};\n","import {Alignment, Checkbox, ControlGroup} from \"@blueprintjs/core\";\nimport React from \"react\";\nimport {useDispatch, useSelector} from \"react-redux\";\nimport {selectFeeFilters, setFeeFilter} from \"../../cowin/cowinSlice\";\n\n/*\n* Free/Paid fee type filtering checkbox component.\n* It dispatches the setFeeFilter action whenever checkbox state changes.\n* See cowinSlice as to how the filtering works\n* */\nfunction FeeTypeFilters(props) {\n    const dispatch = useDispatch();\n    const feeFilter = useSelector(selectFeeFilters);\n    const { alignmentVertical } = props;\n\n    // @param {String} feeTypeVal Free or Paid\n    // Update feeFilter[feeTypeVal] state in store by NOT(current value)\n    // See cowinSlice for \"filter\" object structure\n    const feeTypeChange = (event, feeTypeVal) => {\n        dispatch(setFeeFilter({feeType: feeTypeVal, typeSelected: !feeFilter[feeTypeVal]}));\n    }\n\n    return (\n        <ControlGroup\n            className=\"fee-types\"\n            fill={true}\n            vertical={alignmentVertical}\n        >\n            <Checkbox\n                className=\"fee-type-checkbox\"\n                label={\"Free\"}\n                checked={feeFilter[\"Free\"]}\n                onChange={(event) => feeTypeChange(event, \"Free\")}\n                alignIndicator={Alignment.RIGHT}\n            />\n            <Checkbox\n                className=\"fee-type-checkbox\"\n                label={\"Paid\"}\n                checked={feeFilter[\"Paid\"]}\n                onChange={(event) => feeTypeChange(event, \"Paid\")}\n                alignIndicator={Alignment.RIGHT}\n            />\n        </ControlGroup>\n    )\n}\n\nexport { FeeTypeFilters };\n","/*\n* Returns the date in dd%mm%yy using the specified separator:%\n* @param {Date} d Date object\n* @param {String} separator Separator to use\n* */\nfunction formatDate(date, separator, formatId)  {\n    let month = date.getMonth();\n    let day = date.getDate().toString();\n    let year = date.getFullYear().toString();\n    let yearShort = year.substr(-2);\n    // month is zero-indexed\n    month = (month + 1).toString();\n    // Pad single digit month/dates with preceding 0\n    if (month.length === 1) {\n        month = \"0\" + month;\n    }\n    if (day.length === 1) {\n        day = \"0\" + day;\n    }\n    switch (formatId) {\n        case 1:\n            return [day, month, yearShort].join(separator);\n        case 2:\n            return [year, month, day].join(separator);\n        default:\n            return [day, month, yearShort].join(separator);\n    }\n}\n\nexport { formatDate };\n","import React from \"react\";\nimport {Button, Card, Dialog, Icon, Switch} from \"@blueprintjs/core\";\nimport {useDispatch, useSelector} from \"react-redux\";\nimport { setCalendarByDistrictAutoRefreshInterval, setCalendarByDistrictView} from \"./settingsSlice\";\nimport \"./_settings.scss\"\n\nfunction Settings(props) {\n    const dispatch = useDispatch();\n    const { isOpen, setIsOpen } = props;\n    const view = useSelector(state => state.settings.calendarByDistrictView);\n    const autoRefresh = useSelector(state => state.settings.calendarByDistrictAutoRefresh);\n    const autoRefreshInt = useSelector(state => state.settings.calendarByDistrictAutoRefreshInterval);\n\n    const nickDisplayMap = {\n        \"table\": \"Table\",\n        \"tags\": \"Tags\",\n        4000: \"4 Seconds\",\n        5000: \"5 Seconds\",\n        6000: \"6 Seconds\",\n        10000: \"10 Seconds\",\n    }\n\n    const handleClose = () => setIsOpen(false);\n\n    const handleViewTypeChange = (event) => {\n        // event.preventDefault();\n        dispatch(setCalendarByDistrictView({viewName: event.target.value}));\n    }\n\n    // viewOptions items must exactly be the same as the nicknames for the settings used in settingsSlice\n    const viewOptions = [\"tags\", \"table\"];\n\n    const refreshOptions = [4000, 5000, 6000, 10000]\n\n    const handleAutoRefreshChange = (event) => {\n        if (event.target.checked) {\n            dispatch(setCalendarByDistrictAutoRefreshInterval({interval: 5000}));\n        }\n        else {\n            dispatch(setCalendarByDistrictAutoRefreshInterval({interval: null}));\n        }\n    }\n\n    const handleAutoRefreshValueChange = (event) => {\n        dispatch(setCalendarByDistrictAutoRefreshInterval({interval: event.target.value}));\n    }\n\n    // const isAutoRefreshEnabled = () => calByDist.autoRefresh;\n    \n    return (\n        <Dialog id=\"settings\" className=\"bp3-dialog settings-dialog\"\n                isOpen={isOpen}\n                canOutsideClickClose={true}\n                onClose={handleClose}\n                usePortal={false}\n        >\n            <div className=\"bp3-dialog-header\">\n                <h4 className=\"bp3-heading\">Settings</h4>\n                <Button\n                    aria-label=\"Close\"\n                    className=\"bp3-dialog-close-button bp3-button bp3-minimal\"\n                    icon={\"cross\"}\n                    onClick={handleClose}\n                >\n                </Button>\n            </div>\n            <div className=\"bp3-dialog-body settings-body\">\n                <Card className=\"settings-item-group\">\n                    <div className=\"settings-item\">\n                        <span>View appointments of a Center as</span>\n                        <div className=\"bp3-html-select\">\n                            <select onChange={handleViewTypeChange} value={view}>\n                                {\n                                    viewOptions && viewOptions.map((option, id) => (\n                                        <option key={id} value={option}>{nickDisplayMap[option]}</option>\n                                    ))\n                                }\n                            </select>\n                            <Icon icon={\"double-caret-vertical\"} />\n                        </div>\n                    </div>\n                </Card>\n                <Card className=\"settings-item-group\">\n                    <Switch\n                        className=\"settings-item\"\n                        label={\"Auto refresh data\"}\n                        checked={autoRefresh}\n                        onChange={handleAutoRefreshChange}\n                        alignIndicator={\"right\"}\n                    />\n                    <div className=\"settings-item bp3-large\">\n                        <span>Auto-refresh Interval</span>\n                        <div className=\"bp3-html-select\">\n                            <select onChange={handleAutoRefreshValueChange}\n                                    value={autoRefreshInt || \"\"}\n                                    disabled={!autoRefresh}\n                            >\n                                {\n                                    refreshOptions && refreshOptions.map((option, id) => (\n                                        <option key={id} value={option}>{nickDisplayMap[option]}</option>\n                                    ))\n                                }\n                            </select>\n                            <Icon icon={\"double-caret-vertical\"} />\n                        </div>\n                    </div>\n                </Card>\n            </div>\n        </Dialog>\n    )\n}\n\nexport default Settings;","import { useState } from \"react\";\nimport \"./_filter-popover.scss\";\nimport {Checkbox, Alignment, Button, Intent, H6, NumericInput, ControlGroup} from \"@blueprintjs/core\";\nimport { Classes, Popover2 } from \"@blueprintjs/popover2\"\nimport { useSelector } from \"react-redux\";\nimport { selectAgeFilter, selectVaccineFilter, setAgeFilter, setVaccineFilter } from \"../../cowin/cowinSlice\";\nimport { useDispatch } from \"react-redux\";\nimport { FeeTypeFilters } from \"./FeeTypeFilters\";\n\nexport function FilterPopover() {\n\tconst dispatch = useDispatch();\n\tconst [isOpen, setIsOpen] = useState(false);\n\tconst vaccineFilter = useSelector(selectVaccineFilter);\n\tconst {minAge, maxAge} = useSelector(selectAgeFilter);\n\n\tconst handleVaccineChange = (event, vaccine) => {\n\t\tdispatch(setVaccineFilter({vaccine: vaccine, value: event.target.checked}));\n\t}\n\n\tconst handleAgeValueChange = (valueAsNum, valueAsStr, inputEl) => {\n\t\tlet changedValue = valueAsNum\n\t\tlet min = minAge;\n\t\tlet max = maxAge;\n\t\t// if value is removed, then set the new value as empty string\n\t\tif (valueAsStr === \"\") {\n\t\t\tchangedValue = valueAsStr\n\t\t}\n\t\tswitch (inputEl.id) {\n\t\t\tcase \"filter-min-age\":\n\t\t\t\tmin = changedValue;\n\t\t\t\tbreak;\n\t\t\tcase \"filter-max-age\":\n\t\t\t\tmax = changedValue;\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\tbreak;\n\t\t}\n\t\tdispatch(setAgeFilter({minAge: min, maxAge: max}));\n\t}\n\n\treturn (\n\t\t<Popover2\n\t\t\tcontent={\n\t\t\t\t<div>\n\t\t\t\t\t<div className=\"filter-group is-hidden-desktop\">\n\t\t\t\t\t\t<H6>Fee Type</H6>\n\t\t\t\t\t\t<FeeTypeFilters alignmentVertical={true} />\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className=\"filter-group\">\n\t\t\t\t\t\t<H6>Vaccines</H6>\n\t\t\t\t\t\t<Checkbox\n\t\t\t\t\t\t\tclassName=\"filter-item\"\n\t\t\t\t\t\t\tlabel={\"Covishield\"}\n\t\t\t\t\t\t\tchecked={vaccineFilter.covishield.checked}\n\t\t\t\t\t\t\tonChange={(event) => handleVaccineChange(event, \"COVISHIELD\")}\n\t\t\t\t\t\t\talignIndicator={Alignment.RIGHT}\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<Checkbox\n\t\t\t\t\t\t\tclassName=\"filter-item\"\n\t\t\t\t\t\t\tlabel={\"Covaxin\"}\n\t\t\t\t\t\t\tchecked={vaccineFilter.covaxin.checked}\n\t\t\t\t\t\t\tonChange={(event) => handleVaccineChange(event, \"COVAXIN\")}\n\t\t\t\t\t\t\talignIndicator={Alignment.RIGHT}\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<Checkbox\n\t\t\t\t\t\t\tclassName=\"filter-item\"\n\t\t\t\t\t\t\tlabel={\"Covovax\"}\n\t\t\t\t\t\t\tchecked={vaccineFilter.covovax.checked}\n\t\t\t\t\t\t\tonChange={(event) => handleVaccineChange(event, \"COVOVAX\")}\n\t\t\t\t\t\t\talignIndicator={Alignment.RIGHT}\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<Checkbox\n\t\t\t\t\t\t\tclassName=\"filter-item\"\n\t\t\t\t\t\t\tlabel={\"Corbevax\"}\n\t\t\t\t\t\t\tchecked={vaccineFilter.corbevax.checked}\n\t\t\t\t\t\t\tonChange={(event) => handleVaccineChange(event, \"CORBEVAX\")}\n\t\t\t\t\t\t\talignIndicator={Alignment.RIGHT}\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<Checkbox\n\t\t\t\t\t\t\tclassName=\"filter-item\"\n\t\t\t\t\t\t\tlabel={\"Sputnik V\"}\n\t\t\t\t\t\t\tchecked={vaccineFilter.sputnik.checked}\n\t\t\t\t\t\t\tonChange={(event) => handleVaccineChange(event, \"SPUTNIK V\")}\n\t\t\t\t\t\t\talignIndicator={Alignment.RIGHT}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className=\"filter-group\">\n\t\t\t\t\t\t<H6>Age</H6>\n\t\t\t\t\t\t<ControlGroup vertical={true}>\n\t\t\t\t\t\t\t<div className=\"filter-input\">\n\t\t\t\t\t\t\t\t<span>Min.</span>\n\t\t\t\t\t\t\t\t<NumericInput\n\t\t\t\t\t\t\t\t\tid=\"filter-min-age\"\n\t\t\t\t\t\t\t\t\tclassName=\"filter-input-field\"\n\t\t\t\t\t\t\t\t\tonValueChange={handleAgeValueChange}\n\t\t\t\t\t\t\t\t\tfill={true}\n\t\t\t\t\t\t\t\t\tclampValueOnBlur={true}\n\t\t\t\t\t\t\t\t\tvalue={minAge}\n\t\t\t\t\t\t\t\t\tmin={12}\n\t\t\t\t\t\t\t\t\tmax={45}\n\t\t\t\t\t\t\t\t\tselectAllOnFocus={true}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t<div className=\"filter-input\">\n\t\t\t\t\t\t\t\t<span>Max.</span>\n\t\t\t\t\t\t\t\t<NumericInput\n\t\t\t\t\t\t\t\t\tid=\"filter-max-age\"\n\t\t\t\t\t\t\t\t\tclassName=\"filter-input-field\"\n\t\t\t\t\t\t\t\t\tonValueChange={handleAgeValueChange}\n\t\t\t\t\t\t\t\t\tfill={true}\n\t\t\t\t\t\t\t\t\tvalue={maxAge}\n\t\t\t\t\t\t\t\t\tmin={12}\n\t\t\t\t\t\t\t\t\tmax={45}\n\t\t\t\t\t\t\t\t\tselectAllOnFocus={true}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</ControlGroup>\n\t\t\t\t\t</div>\n\t\t\t\t\t<Button intent={Intent.DANGER} className={Classes.POPOVER2_DISMISS} text=\"Close\" fill={true}/>\n\t\t\t\t</div>\n\t\t\t}\n\t\t\tpopoverClassName={Classes.POPOVER2_CONTENT_SIZING}\n\t\t\tinteractionKind=\"click\"\n\t\t\tisOpen={isOpen}\n\t\t\tonInteraction={state => setIsOpen(state)}\n\t\t\tplacement=\"bottom-end\"\n\t\t>\n\t\t\t<Button icon=\"filter-list\" text=\"Filters\" />\n\t\t</Popover2>\n\t);\n}\n","import React, {useEffect, useRef, useState} from \"react\";\nimport {useDispatch, useSelector} from \"react-redux\";\nimport {\n    fetchCalendarByDistrict,\n    fetchDistricts,\n    fetchStates,\n    resetCalendarByDistrictStore,\n    resetDistrictStore, selectAllDistricts,\n    selectAllStates, selectCalendarByDistrict,\n    selectFilteredData,\n    selectKeywordFilter,\n    selectSelectedDistrict,\n    selectSelectedState,\n    setKeywordFilter,\n    setSelectedDistrict,\n    setSelectedState\n} from \"../cowin/cowinSlice\";\nimport \"./_finder.scss\";\nimport {CenterCard} from \"./Center\";\nimport {DistrictSelector, StateSelector} from \"./Selectors\";\nimport {\n    Button, ButtonGroup, Icon, Intent,\n    NonIdealState, Spinner, TagInput\n} from \"@blueprintjs/core\";\nimport {FeeTypeFilters} from \"./filters/FeeTypeFilters\";\nimport {formatDate} from \"../../utils/DateUtilities\";\nimport Settings from \"../settings/Settings\";\nimport {FilterPopover} from \"./filters/FilterPopover\";\nimport {useHistory} from \"react-router-dom\";\n\n/*\n* A component which shows the Available Slots (active slots returned by CoWIN API)\n* after the user selects a State and District.\n* It also allows filtering by attributes: keywords (center name, center address\n* and center block), fee type (Free/Paid).\n* */\nexport function Finder() {\n    const dispatch = useDispatch();\n    let history = useHistory();\n    const calendarFetchStatus = useSelector((state) => state.cowin.status.calendarByDistrict);\n    // Use the filtered calendarByDistrict data from the store\n    const states = useSelector(selectAllStates);\n    const districts = useSelector(selectAllDistricts);\n    const centers = useSelector(selectFilteredData);\n    const unfilteredCenters = useSelector(selectCalendarByDistrict)\n    const selectedState = useSelector(selectSelectedState);\n    const selectedDistrict = useSelector(selectSelectedDistrict);\n    const searchInputValues = useSelector(selectKeywordFilter);\n    const [isSettingsOpen, setSettingsOpen] = useState(false);\n    const autoRefresh = useSelector(state => state.settings.calendarByDistrictAutoRefresh);\n    const autoRefreshInterval = useSelector(state => state.settings.calendarByDistrictAutoRefreshInterval);\n    const statesFetchStatus = useSelector((state) => state.cowin.status.states);\n    const intervalRef = useRef();\n\n    const refreshData = () => {\n        if (selectedDistrict.districtName === \"Select a District\" || selectedState.stateName === \"Select a State\") {\n            return\n        }\n        let date = new Date();\n        date = formatDate(date, '-');\n        // console.log(\"Refreshing data\", new Date().toLocaleTimeString(), {districtName: selectedDistrict.districtName});\n        dispatch(fetchCalendarByDistrict({districtId: selectedDistrict.districtId, date: date}));\n    }\n\n    useEffect(() => {\n        if (autoRefresh) {\n            // console.log(\"Old timeout:\", intervalRef.current)\n            clearInterval(intervalRef.current);\n            let intervalId = setInterval(() => {\n                refreshData()\n            }, autoRefreshInterval);\n            intervalRef.current = intervalId;\n            // console.log(\"New timeout:\", intervalRef.current)\n            return () => clearInterval(intervalRef.current);\n        }\n    });\n\n    /*\n    * Decide what {content} to load in the \"centers\" div.\n    * Depending on the fetch status and filters, show nice contextual messages for each case.\n    * */\n    let content;\n    if (calendarFetchStatus === \"idle\" || selectedDistrict.district_name === \"Select a district\") {\n        content = <NonIdealState\n            icon={\"info-sign\"}\n            title={\"Select State and District\"}\n        >\n            <div>\n                <Icon icon={\"lightbulb\"} intent={Intent.WARNING}/>\n                Tip: Use the refresh button to refresh the data\n            </div>\n        </NonIdealState>\n    } else if (calendarFetchStatus === \"loading\") {\n        content = <Spinner className={\"centers-loading-spinner\"} intent={Intent.PRIMARY} size={50}/>\n    } else if (calendarFetchStatus === \"succeeded\") {\n        if (centers.length > 0) {\n            content = centers.map((center, id) => (\n                <CenterCard key={id} center={center}/>\n            ));\n        } else {\n            content = <NonIdealState\n                icon={\"zoom-out\"}\n                title={\"No centers match your query.\"}\n                description={\"It might be helpful to divide your query into multiple keywords.\"}\n            />\n        }\n    } else if (calendarFetchStatus === \"succeeded\" && unfilteredCenters.length === 0) {\n        content = <NonIdealState\n            icon={\"issue\"}\n            title={\"Currently, no slots are available.\"}\n            description={\"Please check again after sometime.\"}\n        />\n    } else if (calendarFetchStatus === \"failed\") {\n        content = <NonIdealState\n            icon={\"error\"}\n            title={\"There was a problem!\"}\n            description={\"Couldn't load data.\"}\n        />\n    }\n\n    // Clear Button element to clear/reset the Search bar\n    const clearButton = (\n        <Button\n            icon={\"cross\"}\n            minimal={true}\n            onClick={() => dispatch(setKeywordFilter([]))}\n        />\n    );\n\n    const toggleSettings = () => {\n        setSettingsOpen(!isSettingsOpen);\n    }\n\n    // Fetch states for StateSelector when it mounts\n    useEffect(() => {\n        if (statesFetchStatus === \"idle\") {\n            dispatch(fetchStates());\n        }\n    }, [statesFetchStatus, dispatch]);\n\n    const handleStateChange = (state) => {\n        // Changed the dispatch order here\n        // Reset the current District and Center list by resetting the store\n        dispatch(resetDistrictStore());\n        dispatch(resetCalendarByDistrictStore());\n        dispatch(setSelectedState({stateId: state.state_id, stateName: state.state_name}));\n        // Fetch new districts for the new State\n        dispatch(fetchDistricts({stateId: state.state_id}));\n        // Reset the District selector value\n        dispatch(setSelectedDistrict({districtName: \"Select a District\"}))\n    }\n\n    const handleDistrictChange = (district) => {\n        dispatch(setSelectedDistrict({districtId: district.district_id, districtName: district.district_name}))\n        let date = new Date();\n        date = formatDate(date, '-');\n        dispatch(fetchCalendarByDistrict({districtId: district.district_id, date: date}));\n    }\n\n    const toStarred = () => {\n        history.push(\"/starred\")\n    }\n\n    return (\n        <div className=\"slot-checker-container\">\n            <div className=\"slot-checker\">\n                <div className=\"slot-toolbar-container\">\n                    <div className=\"slot-toolbar\">\n                        <div className=\"slot-toolbar-item-group selectors\">\n                            <StateSelector\n                                states={states}\n                                selectedState={selectedState}\n                                setState={handleStateChange}\n                            />\n                            <DistrictSelector\n                                districts={districts}\n                                selectedDistrict={selectedDistrict}\n                                setDistrict={handleDistrictChange}\n                            />\n                        </div>\n                        <div className=\"slot-toolbar-item-group search-fee-type\">\n                            <TagInput\n                                className=\"slot-toolbar-item search\"\n                                leftIcon={\"search\"}\n                                placeholder={\"Search with multiple keywords..\"}\n                                onChange={(values => dispatch(setKeywordFilter(values)))}\n                                values={searchInputValues}\n                                rightElement={clearButton}\n                            />\n                            <div className=\"is-hidden-mobile slot-toolbar-item fee-types-container\">\n                                <FeeTypeFilters alignmentVertical={false}/>\n                            </div>\n                        </div>\n                        <div className=\"slot-toolbar-item-group menu-buttons\">\n                            <ButtonGroup className=\"menu-button-group\" fill={true}>\n                                <Button icon={\"refresh\"} text={\"Refresh\"} onClick={refreshData}/>\n                                <Button icon={\"star\"} text={\"Starred\"} onClick={toStarred}/>\n                                <FilterPopover/>\n                                <Button icon={\"settings\"} text={\"Settings\"} onClick={toggleSettings}/>\n                            </ButtonGroup>\n                        </div>\n                    </div>\n                </div>\n                <div className=\"centers\">\n                    {content}\n                </div>\n            </div>\n            <Settings isOpen={isSettingsOpen} setIsOpen={setSettingsOpen}/>\n        </div>\n    )\n}","import React from \"react\";\nimport {ReactComponent as Logo} from \"../../find-a-cowin.svg\";\nimport { Button, Classes, H3, TagInput } from \"@blueprintjs/core\";\nimport { Tooltip2 } from \"@blueprintjs/popover2\";\nimport \"./_home.scss\"\n\n\nexport function Home() {\n    return (\n        <div id=\"home\">\n            <div className=\"home-container\">\n\t\t\t\t<div className=\"home-content\">\n\t\t\t\t\t<Logo className=\"logo about-logo\"/>\n\t\t\t\t\t<span>A slot finder/checker for the CoWIN vaccination platform</span>\n\t\t\t\t\t<span>built using the CoWIN Public API.</span>\n\t\t\t\t\t<div className=\"home-links\">\n\t\t\t\t\t\t<a href=\"https://faraaz.tech/contact\">\n\t\t\t\t\t\t\t<Tooltip2 content={\"Get in touch\"} position={\"bottom\"}>\n\t\t\t\t\t\t\t\t<Button className={Classes.MINIMAL} icon=\"user\" text=\"faraaz.tech\" />\n\t\t\t\t\t\t\t</Tooltip2>\n\t\t\t\t\t\t</a>\n\t\t\t\t\t\t<a href=\"https://github.com/faraazb/find-a-cowin\">\n\t\t\t\t\t\t\t<Tooltip2 content={\"Check out the source code\"} position=\"bottom\">\n\t\t\t\t\t\t\t\t<Button className={Classes.MINIMAL} icon=\"git-branch\" text=\"GitHub\" />\n\t\t\t\t\t\t\t</Tooltip2>\n\t\t\t\t\t\t</a>\n\t\t\t\t\t</div>\n\t\t\t\t\t<H3 className=\"home-help-title\">Help regarding usage</H3>\n\t\t\t\t\t<div className=\"home-help\"> \n\t\t\t\t\t\t<table className=\"bp3-html-table bp3-html-table-bordered query-table\">\n\t\t\t\t\t\t\t<thead>\n\t\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<th>Query</th>\n\t\t\t\t\t\t\t\t<th>Answer</th>\n\t\t\t\t\t\t\t\t</tr>\n\t\t\t\t\t\t\t</thead>\n\t\t\t\t\t\t\t<tbody>\n\t\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>Nothing happens when I type in the search bar..</td>\n\t\t\t\t\t\t\t\t<td>Press enter key! This is so that you can use multiple keywords. \n\t\t\t\t\t\t\t\t\tFor e.g. <TagInput values={[\"Andheri\", \"Borivali\"]}/> to get all the centers \n\t\t\t\t\t\t\t\t\tthat match for <b>either</b> Andheri or Borivali.</td>\n\t\t\t\t\t\t\t\t</tr>\n\t\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>What does the refresh button do?</td>\n\t\t\t\t\t\t\t\t<td>It fetches the data again, without refreshing the page or resetting your filters.</td>\n\t\t\t\t\t\t\t\t</tr>\n\t\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>Where are starred centers saved?</td>\n\t\t\t\t\t\t\t\t<td>These are stored in your browser's local storage and cannot sync across devices.</td>\n\t\t\t\t\t\t\t\t</tr>\n\t\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>What does auto-refresh under Settings do?</td>\n\t\t\t\t\t\t\t\t<td>It regularly fetches new data for the selected district at the selected interval.</td>\n\t\t\t\t\t\t\t\t</tr>\n\t\t\t\t\t\t\t</tbody>\n\t\t\t\t\t\t</table>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n            </div>\n        </div>\n    );\n}\n","import { Button, Classes, H1 } from \"@blueprintjs/core\";\nimport React from \"react\";\nimport { NavLink } from \"react-router-dom\";\nimport \"./_four-o-four.scss\"\n\nexport function FourOFour() {\n    return (\n        <div id=\"four-o-four\">\n            <div className=\"four-o-four-container\">\n\t\t\t\t<div className=\"four-o-four-content\">\n\t\t\t\t\t<H1 className=\"four-o-four-title big\">404</H1>\n                    <H1 className=\"four-o-four-title\">Not Found</H1>\n\t\t\t\t\t<span>Please visit any of the below links.</span>\n\t\t\t\t\t<div className=\"four-o-four-links\">\n\t\t\t\t\t\t<NavLink to=\"/\">\n                            <Button className={Classes.MINIMAL} icon=\"search\" text=\"Slot Finder\" />\n\t\t\t\t\t\t</NavLink>\n\t\t\t\t\t\t<NavLink to=\"/about\">\n                            <Button className={Classes.MINIMAL} icon=\"info-sign\" text=\"About\" />\n\t\t\t\t\t\t</NavLink>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n            </div>\n        </div>\n    );\n}\n","import React, {useEffect} from \"react\";\nimport {Button, H3, Intent, Spinner} from \"@blueprintjs/core\";\nimport \"./_starred-centers.scss\";\nimport {NavLink} from \"react-router-dom\";\nimport {useDispatch, useSelector} from \"react-redux\";\nimport {resetStarredCenters, selectStarredCenters} from \"./starredCentersSlice\";\nimport {fetchCalendarByCenter, selectCalendarByCenter} from \"../cowin/cowinSlice\";\nimport {formatDate} from \"../../utils/DateUtilities\";\nimport {CenterCard} from \"../finder/Center\";\n\nexport const StarredCenters = () => {\n    const dispatch = useDispatch();\n    const initializeStarred = !localStorage.getItem(\"starred\");\n    const starred = useSelector(selectStarredCenters);\n    const centers = useSelector(selectCalendarByCenter);\n    const fetchStatus = useSelector((state) => state.cowin.status.calendarByCenter);\n\n    useEffect(() => {\n        if (initializeStarred) {\n            dispatch(resetStarredCenters());\n        }\n    })\n\n    useEffect(() => {\n        let date = new Date();\n        date = formatDate(date, '-');\n        for (let centerId of starred) {\n            if (fetchStatus[centerId] === \"idle\") {\n                dispatch(fetchCalendarByCenter({centerId: centerId, date: date}))\n            }\n        }\n    }, [starred, fetchStatus, dispatch]);\n\n    const getCenterContent = (centerId) => {\n        let content;\n        if (fetchStatus[centerId] === \"idle\") {\n            let date = new Date();\n            date = formatDate(date, '-');\n            dispatch(fetchCalendarByCenter({centerId: centerId, date: date}))\n            content = <CenterCard key={centerId} center={null} loading={true}/>\n        }\n        else if (fetchStatus[centerId] === \"loading\") {\n            content = <Spinner className={\"centers-loading-spinner\"} intent={Intent.PRIMARY} size={50} />\n        }\n        else if (fetchStatus[centerId] === \"succeeded\") {\n            let center = centers[centerId]\n            content = <CenterCard key={centerId} center={center} />\n        }\n        return content;\n    }\n\n    return (\n        <div className=\"starred-centers\">\n            <div className=\"header-container\">\n                <div className=\"header\">\n                    <NavLink to={\"/\"}>\n                        <Button icon={\"arrow-left\"} minimal={true}/>\n                    </NavLink>\n                    <H3 className=\"heading\">\n                        Starred Centers\n                    </H3>\n                </div>\n            </div>\n            <div className=\"centers\">\n                {\n                    starred.length === 0 && <div className=\"bp3-callout bp3-intent-warning\">\n                        <h4 className=\"bp3-heading\">\n                            No starred centers!\n                        </h4>\n                        Mark centers as starred using the <Button small={true} outlined={true}\n                                                                  icon={\"star\"} text={\"Star\"}/> button.\n                    </div>\n                }\n                {\n                    starred.length > 0 && starred.map((centerId, _id) => (\n                        getCenterContent(centerId)\n                    ))\n                }\n            </div>\n        </div>\n    )\n}","import './_app.scss';\nimport React, {useEffect, useState} from 'react';\nimport {ReactComponent as Logo} from \"./find-a-cowin.svg\";\nimport {useDispatch} from \"react-redux\";\nimport {resetSettings} from './features/settings/settingsSlice';\nimport {Finder} from \"./features/finder/Finder\";\nimport {BrowserRouter, NavLink, Route, Switch} from \"react-router-dom\";\nimport {\n    FocusStyleManager, Alignment, Button, Classes, Navbar, NavbarDivider, NavbarGroup,\n    NavbarHeading\n} from \"@blueprintjs/core\";\nimport {Home} from './features/home/Home';\nimport {FourOFour} from './features/FourOFour';\nimport {StarredCenters} from \"./features/starred-centers/StarredCenters\";\nimport {Position, Toaster} from \"@blueprintjs/core\";\n\n/** Singleton toaster instance. */\nexport const AppToaster = Toaster.create({\n    className: \"app-toaster\",\n    position: Position.TOP,\n});\n\nFocusStyleManager.onlyShowFocusOnTabs();\n\nfunction App() {\n    const dispatch = useDispatch();\n    const initializeSettings = !localStorage.getItem('SETTINGS')\n\n    const switchTheme = () => {\n        const div = document.getElementById(\"app\");\n        if (div.classList.contains(\"bp3-dark\")) {\n            div.classList.remove(\"bp3-dark\");\n            setThemeButton({name: \"Dark Theme\", icon: \"moon\"});\n        } else if (!div.classList.contains(\"bp3-dark\")) {\n            div.classList.add(\"bp3-dark\");\n            setThemeButton({name: \"Light Theme\", icon: \"flash\"});\n        }\n    }\n\n    const useThemeDetector = () => {\n        const getCurrentTheme = () => window.matchMedia(\"(prefers-color-scheme: dark)\").matches;\n        const [isDarkTheme, setIsDarkTheme] = useState(getCurrentTheme());\n\n        const mqListener = (e => {\n            setIsDarkTheme(e.matches);\n        });\n\n        useEffect(() => {\n            const darkThemeMq = window.matchMedia(\"(prefers-color-scheme: dark)\");\n            darkThemeMq.addEventListener(\"change\", mqListener);\n            return () => darkThemeMq.removeEventListener(\"change\", mqListener);\n        }, []);\n        return isDarkTheme;\n    }\n\n    const isDarkTheme = useThemeDetector()\n    const [themeButton, setThemeButton] = useState(\n        {\n            name: isDarkTheme ? \"Light Theme\" : \"Dark Theme\",\n            icon: isDarkTheme ? \"flash\" : \"moon\"\n        }\n    );\n\n    useEffect(() => {\n        if (isDarkTheme) {\n            const div = document.getElementById(\"app\");\n            div.classList.add(\"bp3-dark\");\n        }\n    }, [isDarkTheme])\n\n    useEffect(() => {\n        if (initializeSettings) {\n            // console.log(\"Resetting settings\")\n            dispatch(resetSettings());\n        }\n    });\n\n    return (\n        <BrowserRouter basename={process.env.PUBLIC_URL}>\n            <div id=\"app\">\n                <Navbar>\n                    <NavbarGroup align={Alignment.LEFT}>\n                        <NavLink to=\"/\" id=\"find-a-cowin\">\n                            <NavbarHeading className=\"navigation-header\">\n                                <Logo className=\"logo\"/>\n                            </NavbarHeading>\n                        </NavLink>\n                        <NavbarDivider className=\"navigation-divider\"/>\n                        <NavLink to=\"/about\">\n                            <Button className={Classes.MINIMAL} icon=\"info-sign\" text=\"About\"/>\n                        </NavLink>\n                    </NavbarGroup>\n                    <NavbarGroup align={Alignment.RIGHT}>\n                        <Button\n                            className={Classes.MINIMAL}\n                            icon={themeButton.icon}\n                            text={themeButton.name}\n                            onClick={switchTheme}\n                        />\n                    </NavbarGroup>\n                </Navbar>\n                <div className=\"app-route\">\n                    <Switch>\n                        <Route path=\"/starred\" exact={true}>\n                            <StarredCenters/>\n                        </Route>\n\n                        <Route path=\"/about\" exact={true}>\n                            <Home/>\n                        </Route>\n\n                        <Route exact path=\"/\">\n                            <Finder/>\n                        </Route>\n\n                        <Route path=\"*\">\n                            <FourOFour/>\n                        </Route>\n                    </Switch>\n                </div>\n            </div>\n        </BrowserRouter>\n    );\n}\n\nexport default App;\n","import { configureStore } from '@reduxjs/toolkit';\nimport cowinReducer from \"../features/cowin/cowinSlice\";\nimport settingsReducer from \"../features/settings/settingsSlice\";\nimport starredCentersReducer from \"../features/starred-centers/starredCentersSlice\"\n\nexport const store = configureStore({\n    reducer: {\n        cowin: cowinReducer,\n        settings: settingsReducer,\n        starredCenters: starredCentersReducer\n    },\n});","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport {store} from \"./app/store\";\nimport {Provider} from \"react-redux\";\nimport \"@blueprintjs/core/lib/css/blueprint.css\";\nimport \"@blueprintjs/popover2/lib/css/blueprint-popover2.css\";\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n      <Provider store={store}>\n          <App />\n      </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}